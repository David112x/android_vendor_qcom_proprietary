<?xml version="1.0" encoding="utf-8" ?>
<!--
========================================================================
   Copyright(c) 2017-2018 Qualcomm Technologies, Inc.
   All Rights Reserved.
   Confidential and Proprietary - Qualcomm Technologies, Inc.
========================================================================
-->
<OISDriver
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../api/sensor/camxoisdriver.xsd">
  <module_version major_revision="1" minor_revision="0" incr_revision="0"/>

  <!--OIS slave information
       element for OISName
       element for slaveAddress
       element for i2cFrequencyMode
       element for firmware flag
       element for ois calibration flag
       element for powerUpSequence
       element for powerDownSequence  -->
  <slaveInfo>
    <!--Name of the OIS -->
    <OISName>ois_default</OISName>
    <!--8-bit or 10-bit write slave address -->
    <slaveAddress>0x1C</slaveAddress>
    <!--I2C frequency mode of slave
        Supported modes are: STANDARD (100 KHz), FAST (400 KHz), FAST_PLUS (1 MHz), CUSTOM (Custom frequency in DTSI) -->
    <i2cFrequencyMode>FAST</i2cFrequencyMode>
    <!--OIS firm ware update flag -->
    <fwflag>0</fwflag>
    <!--OIS calibration flag -->
    <oiscalib>1</oiscalib>
    <!--Sequence of power configuration type and configuration value required to control power to the device -->
    <powerUpSequence>
      <!--Power setting configuration
          Contains: configType, configValue and delay in milli seconds -->
      <powerSetting>
        <!--Power configuration type
            Supported types are: MCLK, VANA, VDIG, VIO, VAF, RESET, STANDBY -->
        <configType>VAF</configType>
        <!--Configuration value for the type of configuration -->
        <configValue>0</configValue>
        <!--Delay in milli seconds -->
        <delayMs>1</delayMs>
      </powerSetting>
    </powerUpSequence>
    <!--Sequence of power configuration type and configuration value required to control power to the device -->
    <powerDownSequence>
      <!--Power setting configuration
          Contains: configType, configValue and delay in milli seconds -->
      <powerSetting>
        <!--Power configuration type
            Supported types are: MCLK, VANA, VDIG, VIO, VAF, RESET, STANDBY -->
        <configType>VAF</configType>
        <!--Configuration value for the type of configuration -->
        <configValue>0</configValue>
        <!--Delay in milli seconds -->
        <delayMs>1</delayMs>
      </powerSetting>
    </powerDownSequence>
  </slaveInfo>
  <!--OIS Opcode
       element for prog
       element for coeff
       element for pheripheral
       element for memory -->
  <opcode>
    <!--OIS code prog -->
    <prog>0x80</prog>
    <!--OIS code coeff -->
    <coeff>0x88</coeff>
    <!--OIS code pheripheral -->
    <pheripheral>0x82</pheripheral>
    <!--OIS code memory -->
    <memory>0x84</memory>
  </opcode>
  <!--Sequence of register settings to configure the device -->
  <oisinitSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x300</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x20</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </oisinitSettings>
  <!--Sequence of register settings to configure the device -->
  <enableOisSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x301</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x21</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </enableOisSettings>
  <!--Sequence of register settings to configure the device -->
  <disableOisSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x302</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x22</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">0</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">0</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </disableOisSettings>
  <!--Sequence of register settings to configure the device -->
  <movieModeSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x303</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x23</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </movieModeSettings>
  <!--Sequence of register settings to configure the device -->
  <stillModeSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x304</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x24</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </stillModeSettings>
  <!--Sequence of register settings to configure the device -->
  <centeringOnSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x305</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x25</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </centeringOnSettings>
  <!--Sequence of register settings to configure the device -->
  <centeringOffSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x306</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x26</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </centeringOffSettings>
  <!--Sequence of register settings to configure the device -->
  <pantiltOnSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x307</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x27</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </pantiltOnSettings>
  <!--Sequence of register settings to configure the device -->
  <sceneOisSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData 
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x308</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x28</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </sceneOisSettings>
  <!--Sequence of register settings to configure the device -->
  <sceneFilterOnSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x309</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x29</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </sceneFilterOnSettings>
  <!--Sequence of register settings to configure the device -->
  <sceneFilterOffSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x310</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x30</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </sceneFilterOffSettings>
  <!--Sequence of register settings to configure the device -->
  <sceneRangeOnSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x311</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x31</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </sceneRangeOnSettings>
  <!--Sequence of register settings to configure the device -->
  <sceneRangeOffSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
        operation and delay in micro seconds
         element for slaveAddr
         element for registerAddr
         element for registerData
         element for regAddrType
         element for regDataType
         element for operation
         element for delayUs  -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x312</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x32</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
    </regSetting>
  </sceneRangeOffSettings>
</OISDriver>
