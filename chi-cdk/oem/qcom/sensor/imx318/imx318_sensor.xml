<?xml version="1.0" encoding="utf-8" ?>
<!--========================================================================-->
<!-- Copyright (c) 2016-2019 Qualcomm Technologies, Inc.                    -->
<!-- All Rights Reserved.                                                   -->
<!-- Confidential and Proprietary - Qualcomm Technologies, Inc.             -->
<!--========================================================================-->
<sensorDriverData
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../api/sensor/camxsensordriver.xsd">
  <module_version major_revision="1" minor_revision="0" incr_revision="0"/>

  <!--Sensor slave information -->
  <slaveInfo>
    <!--Name of the sensor -->
    <sensorName>imx318</sensorName>
    <!--8-bit or 10-bit write slave address -->
    <slaveAddress>0x34</slaveAddress>
    <!--Register address / data size in bytes -->
    <regAddrType range="[1,4]">2</regAddrType>
    <!--Register address / data size in bytes -->
    <regDataType range="[1,4]">2</regDataType>
    <!--Register address for sensor Id -->
    <sensorIdRegAddr>0x0016</sensorIdRegAddr>
    <!--Sensor Id -->
    <sensorId>0x0318</sensorId>
    <!--Mask for sensor id. Sensor Id may only be few bits -->
    <sensorIdMask>4294967295</sensorIdMask>
    <!--I2C frequency mode of slave
        Supported modes are: STANDARD (100 KHz), FAST (400 KHz), FAST_PLUS (1 MHz), CUSTOM (Custom frequency in DTSI) -->
    <i2cFrequencyMode>FAST</i2cFrequencyMode>
    <!--Sequence of power configuration type and configuration value required to control power to the device -->
    <powerUpSequence>
      <!--Power setting configuration
          Contains: configType, configValue and delay in milli seconds -->
      <powerSetting>
        <!--Power configuration type
            Supported types are: MCLK, VANA, VDIG, VIO, VAF, RESET, STANDBY -->
        <configType>RESET</configType>
        <!--Configuration value for the type of configuration -->
        <configValue>0</configValue>
        <!--Delay in milli seconds -->
        <delayMs>1</delayMs>
      </powerSetting>
      <!--Power setting configuration
          Contains: configType, configValue and delay in milli seconds -->
      <powerSetting>
        <configType>VANA</configType>
        <configValue>0</configValue>
        <delayMs>1</delayMs>
      </powerSetting>
      <powerSetting>
        <configType>VDIG</configType>
        <configValue>0</configValue>
        <delayMs>1</delayMs>
      </powerSetting>
      <powerSetting>
        <configType>VIO</configType>
        <configValue>0</configValue>
        <delayMs>0</delayMs>
      </powerSetting>
      <powerSetting>
        <configType>MCLK</configType>
        <configValue>24000000</configValue>
        <delayMs>1</delayMs>
      </powerSetting>
      <powerSetting>
        <configType>RESET</configType>
        <configValue>1</configValue>
        <delayMs>18</delayMs>
      </powerSetting>
    </powerUpSequence>
    <!--Sequence of power configuration type and configuration value required to control power to the device -->
    <powerDownSequence>
      <!--Power setting configuration
          Contains: configType, configValue and delay in milli seconds -->
      <powerSetting>
        <!--Power configuration type
            Supported types are: MCLK, VANA, VDIG, VIO, VAF, RESET, STANDBY -->
        <configType>MCLK</configType>
        <!--Configuration value for the type of configuration -->
        <configValue>0</configValue>
        <delayMs>1</delayMs>
      </powerSetting>
      <powerSetting>
        <configType>RESET</configType>
        <configValue>0</configValue>
        <!--Delay in milli seconds -->
        <delayMs>1</delayMs>
      </powerSetting>
      <powerSetting>
        <configType>VIO</configType>
        <configValue>0</configValue>
        <delayMs>0</delayMs>
      </powerSetting>
      <powerSetting>
        <configType>VDIG</configType>
        <configValue>0</configValue>
        <delayMs>0</delayMs>
      </powerSetting>
      <powerSetting>
        <configType>VANA</configType>
        <configValue>0</configValue>
        <delayMs>0</delayMs>
      </powerSetting>
    </powerDownSequence>
  </slaveInfo>
  <!--Addresses for various sensor registers -->
  <regAddrInfo>
    <!--Register address to program width -->
    <xOutput>0x034C</xOutput>
    <!--Register address to program height -->
    <yOutput>0x034E</yOutput>
    <!--Register address to program Frame length lines -->
    <frameLengthLines>0x0340</frameLengthLines>
    <!--Register address to program Line length pixel clock -->
    <lineLengthPixelClock>0x0342</lineLengthPixelClock>
    <!--Register address to program coarse integration time -->
    <coarseIntgTimeAddr>0x0202</coarseIntgTimeAddr>
    <!--Register address to program short coarse integration time
        This address is optional and must be provided if supported by sensor -->
    <shortCoarseIntgTimeAddr>0x0224</shortCoarseIntgTimeAddr>
    <!--Register address to program global gain channel -->
    <globalGainAddr>0x0204</globalGainAddr>
    <!--Register address to program short global gain channel
        This address is optional and must be provided if supported by sensor -->
    <shortGlobalGainAddr>0x0216</shortGlobalGainAddr>
    <!--Register address to program digital gloabl gain channel
        This address is optional and must be provided if supported by sensor -->
    <digitalGlobalGainAddr>0x020E</digitalGlobalGainAddr>
    <!--Register address to program manual test pattern value for Red channel -->
    <testPatternRAddr>0x0602</testPatternRAddr>
    <!--Register address to program manual test pattern value for Green Red channel -->
    <testPatternGRAddr>0x0604</testPatternGRAddr>
    <!--Register address to program manual test pattern value for Blue channel -->
    <testPatternBAddr>0x0608</testPatternBAddr>
    <!--Register address to program manual test pattern value for Green Blue channel -->
    <testPatternGBAddr>0x0606</testPatternGBAddr>
  </regAddrInfo>
  <!--Information of all the resolutions
      Number of resolutions is detected from number of resolutionData nodes -->
  <resolutionInfo>
    <!--Specify which sensor version can support this setting-->
    <sensorVersion>0</sensorVersion>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>0</xStart>
            <yStart>0</yStart>
            <width>5488</width>
            <height>4112</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>0x36</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>0</xStart>
            <yStart>0</yStart>
            <width>5488</width>
            <height>2</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>PDAF</type>
        </streamConfiguration>
        <!--Information for a stream data -->
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>6064</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>4392</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>467</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>278</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>784800000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>1</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>1</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>30</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x17</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x65</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x47</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xEA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x27</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x79</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x79</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x27</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x63</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x63</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x27</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x79</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>NORMAL</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>0</xStart>
            <yStart>0</yStart>
            <width>2744</width>
            <height>2056</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>7352</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>3620</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>426</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>1576</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>345600000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>2</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>2</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>30.02</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x24</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x65</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x80</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x29</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x24</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x37</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x69</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x80</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>NORMAL</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>440</xStart>
            <yStart>760</yStart>
            <width>4608</width>
            <height>2592</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>0x36</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>0</xStart>
            <yStart>0</yStart>
            <width>4608</width>
            <height>2</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>PDAF</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>7352</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>3622</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>433</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>790</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>549600000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>1</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>1</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>30.01</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x26</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x65</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x12</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x12</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x29</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x19</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x49</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x66</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x98</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x75</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x73</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x26</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x77</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x89</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x75</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x26</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x73</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x26</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x66</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x98</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
          <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>NORMAL</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>824</xStart>
            <yStart>976</yStart>
            <width>3840</width>
            <height>2160</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>6064</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>2196</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>446</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>51</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>566400000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>1</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>1</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>60.01</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x17</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x08</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x94</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x38</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x12</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x37</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x65</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xEC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x16</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x80</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x88</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>NORMAL</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>0</xStart>
            <yStart>0</yStart>
            <width>2744</width>
            <height>1544</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>7352</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>1810</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>426</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>274</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>345600000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>2</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>2</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>60.05</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x12</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x65</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x80</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x29</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x24</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x41</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x41</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x37</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xCF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x80</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x38</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>NORMAL</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>0</xStart>
            <yStart>0</yStart>
            <width>1920</width>
            <height>1080</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>3680</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>1808</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>433</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>302</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>513600000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>2</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>2</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>120.11</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x60</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x65</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x16</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x34</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xCE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x80</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x38</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x29</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x19</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x47</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x86</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x47</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x86</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x44</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>HFR</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>0</xStart>
            <yStart>128</yStart>
            <width>1372</width>
            <height>772</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>3680</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>820</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>432</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>27</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>357600000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>4</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>4</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>240.19</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x60</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x34</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x44</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x65</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x29</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>HFR</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>0</xStart>
            <yStart>0</yStart>
            <width>5488</width>
            <height>4112</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>6064</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>4168</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>480</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>54</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>746400000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>1</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>1</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>30</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x17</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x23</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x61</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x37</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x34</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xEA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x27</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x79</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x79</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x27</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x63</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x63</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x27</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x79</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <ZZHDRInfo>
        <ZZHDRPattern>P0P0P1P1</ZZHDRPattern>
        <ZZHDRFirstExposure>SHORTEXPOSURE</ZZHDRFirstExposure>
      </ZZHDRInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>ZZHDR</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>24</xStart>
            <yStart>526</yStart>
            <width>5440</width>
            <height>3060</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>7352</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>3136</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>449</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>60</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>556800000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>1</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>1</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>30.08</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x40</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x23</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x61</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x40</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x40</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x21</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x29</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x36</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x47</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xEE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x12</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x42</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x74</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x12</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x74</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x42</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x12</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2A</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <ZZHDRInfo>
        <ZZHDRPattern>P0P0P1P1</ZZHDRPattern>
        <ZZHDRFirstExposure>SHORTEXPOSURE</ZZHDRFirstExposure>
      </ZZHDRInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>ZZHDR</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>440</xStart>
            <yStart>760</yStart>
            <width>4608</width>
            <height>2592</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>7752</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>2640</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>441</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>55</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>400800000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>1</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>1</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>30.02</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x17</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x23</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x61</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x12</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x12</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x33</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x29</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x48</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x46</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x19</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x49</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x73</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x89</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x77</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x75</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x73</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x26</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x77</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x89</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x75</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x26</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x73</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x26</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xAC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x66</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x98</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <ZZHDRInfo>
        <ZZHDRPattern>P0P0P1P1</ZZHDRPattern>
        <ZZHDRFirstExposure>SHORTEXPOSURE</ZZHDRFirstExposure>
      </ZZHDRInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>ZZHDR</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>824</xStart>
            <yStart>976</yStart>
            <width>3840</width>
            <height>2160</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>6064</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>3136</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>432</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>531</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>403200000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>1</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>1</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>30.03</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x17</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x40</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x23</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x222</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x61</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x38</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xEE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x88</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <ZZHDRInfo>
        <ZZHDRPattern>P0P0P1P1</ZZHDRPattern>
        <ZZHDRFirstExposure>SHORTEXPOSURE</ZZHDRFirstExposure>
      </ZZHDRInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>ZZHDR</capability>
    </resolutionData>
    <resolutionData>
      <!--Color filter arrangement of the sensor
          Supported filter arrangements are: BAYER_BGGR, BAYER_GBRG, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
      <colorFilterArrangement>BAYER_RGGB</colorFilterArrangement>
      <!--Stream information -->
      <streamInfo>
        <!--Information for a stream data -->
        <streamConfiguration>
          <!--Virtual Channel of the data
              Valid values for virtual channel are: 0, 1, 2 and 3 -->
          <vc range="[0,3]">0</vc>
          <!--Data type of the stream. Default value is 0x2B (10-bit RAW) -->
          <dt>43</dt>
          <!--Frame dimension: contains xStart, yStart, width and height -->
          <frameDimension>
            <xStart>824</xStart>
            <yStart>976</yStart>
            <width>3840</width>
            <height>2160</height>
          </frameDimension>
          <!--Bit width of the data -->
          <bitWidth>10</bitWidth>
          <!--Type of the stream
              Supported stream types are: BLOB, IMAGE, BAYER_GRBG, BAYER_RGGB, BAYER_Y, YUV_UYVY, YUV_YUYV -->
          <type>IMAGE</type>
        </streamConfiguration>
      </streamInfo>
      <!--Line length pixel clock of frame
          Typically this value is the active width + blanking width -->
      <lineLengthPixelClock>6064</lineLengthPixelClock>
      <!--Frame length lines of frame
          Typically this value is the active height + blanking height -->
      <frameLengthLines>3136</frameLengthLines>
      <!--Minimum horizontal blanking interval in pixels -->
      <minHorizontalBlanking>432</minHorizontalBlanking>
      <!--Minimum horizontal blanking interval in lines -->
      <minVerticalBlanking>531</minVerticalBlanking>
      <!--Output pixel clock -->
      <outputPixelClock>403200000</outputPixelClock>
      <!--Horizontal binning value -->
      <horizontalBinning>1</horizontalBinning>
      <!--Vertical binning value -->
      <verticalBinning>1</verticalBinning>
      <!--Maximum frame rate -->
      <frameRate>30.03</frameRate>
      <!--Number of lanes in which the data is streamed -->
      <laneCount>4</laneCount>
      <!--The value is a ratio, and the sensors are able only to downscale.
          It must be 1.00 or greater at all times.-->
      <downScaleFactor>1.0</downScaleFactor>
      <!--Settle time in nano seconds -->
      <settleTimeNs>14</settleTimeNs>
      <!--Flag to know if the sensor is a 3phase sensor -->
      <is3Phase>0</is3Phase>
      <!--Intergation related information for each resolution-->
      <integrationInfo>
        <!--Minimum intergation time-->
        <integrationTimeMin>0</integrationTimeMin>
        <!--The step of intergation time-->
        <integrationTimeStep>0</integrationTimeStep>
        <!--Integration time margin-->
        <integrationTimeMargin>0</integrationTimeMargin>
      </integrationInfo>
      <!--Sequence of register settings to configure the device -->
      <resSettings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x342</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x17</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x343</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x340</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x341</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x40</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x344</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x345</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x346</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x347</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x348</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x349</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A2</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x220</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x221</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x381</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x383</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x385</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x387</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x902</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3010</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x61</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3011</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3045</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3194</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31A1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5EC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD5ED</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x401</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x404</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x405</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x408</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x409</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x38</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x40F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x34F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x70</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x301</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x305</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x307</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xEE</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x309</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x820</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x821</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x822</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x823</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x422F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x4230</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3031</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3033</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3039</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x303B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x306F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x56</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6636</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6637</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x14</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA12</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA13</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA14</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA15</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA16</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA17</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA18</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA19</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA1D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA66</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA67</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA68</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA69</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x39</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x13</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA6F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x20</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA70</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xCA71</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x10</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3900</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3901</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x31C3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3066</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7B63</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FB</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x56FF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x50</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6174</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x6175</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9323</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F1</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F4</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F6</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30F7</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xD0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x30FD</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x714D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7152</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7156</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7155</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x7159</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A3</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A0</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A5</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76A9</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x78</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AF</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x76AC</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x9303</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0xD00C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3601</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3602</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xFA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3603</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3604</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3605</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3606</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x96</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3607</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x28</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3608</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7D</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3609</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x22</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x6C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x54</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x360F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x18</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3610</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x202</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x203</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2C</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x224</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x225</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x204</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x01</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x205</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x20F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x210</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x211</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x212</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x213</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x214</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x215</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x216</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x217</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x218</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x219</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3013</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3056</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3167</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3100</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3101</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x32</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3102</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3103</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x15</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3104</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3105</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xBD</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3106</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3107</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x11</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3108</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3109</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x310F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3110</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3111</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3112</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3113</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3114</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3115</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3116</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3117</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3118</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3119</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xF2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x311F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3120</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3121</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xC</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3122</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x3</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3123</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE1</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3124</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3125</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3126</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3127</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3128</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3129</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xB4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312A</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312B</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xDF</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312C</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x9</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312D</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4B</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312E</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x312F</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x8F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3130</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x4</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3131</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7F</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3132</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x2</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3133</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x88</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3134</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xA</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3135</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x7E</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3136</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0x5</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x3137</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0xE7</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
           <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0x0</delayUs>
        </regSetting>
      </resSettings>
      <!--Crop information for the frame -->
      <cropInfo>
        <left>0</left>
        <right>0</right>
        <top>0</top>
        <bottom>0</bottom>
      </cropInfo>
      <!--List of features / capabilities supported by sensor -->
      <capability>NORMAL</capability>
    </resolutionData>
  </resolutionInfo>
  <!--Exposure control information -->
  <exposureControlInfo>
    <!--Maximum analog again supported by sensor -->
    <maxAnalogGain>16</maxAnalogGain>
    <!--Maximum digital again supported by sensor -->
    <maxDigitalGain>1</maxDigitalGain>
    <!--Minimum offset to be maintained between line count and frame length lines -->
    <verticalOffset>10</verticalOffset>
    <!--Minimum line count supported by sensor -->
    <minLineCount>1</minLineCount>
    <!--Maximum line count supported by sensor -->
    <maxLineCount>65525</maxLineCount>
    <!--Conversion factor to convert real digital gain to register digital gain -->
    <realToRegDigitalGainConversionFactor>256</realToRegDigitalGainConversionFactor>
    <!--Real gain to register gain equation
        The equation must contain "realGain" in its equation
        Ex:= 512 - (512 / realGain) -->
    <realToRegGain></realToRegGain>
    <!--Register gain to real gain equation
        The equation must contain "regGain" in its equation
        Ex:= 512 / (512 - regGain) -->
    <regToRealGain></regToRealGain>
  </exposureControlInfo>
  <!--Sequence of register settings to configure the device -->
  <streamOnSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x0100</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x1</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
      <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
      <delayUs>0</delayUs>
    </regSetting>
  </streamOnSettings>
  <!--Sequence of register settings to configure the device -->
  <streamOffSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x0100</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x0</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
      <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
      <delayUs>0</delayUs>
    </regSetting>
  </streamOffSettings>
  <!--Sequence of register settings to configure the device -->
  <groupHoldOnSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x0104</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x1</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
      <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
      <delayUs>0</delayUs>
    </regSetting>
  </groupHoldOnSettings>
  <!--Sequence of register settings to configure the device -->
  <groupHoldOffSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x0104</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x0</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">2</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
      <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
      <delayUs>0</delayUs>
    </regSetting>
  </groupHoldOffSettings>
  <!--Sequence of register settings to configure the device -->
  <initSettings>
    <!--Specify which sensor version can support this setting-->
    <sensorVersion>0</sensorVersion>
    <initSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x136</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x137</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3067</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x30F0</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x31C2</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x41B6</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x4600</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x46C2</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x4877</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x11</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x487B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x487F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x27</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x4883</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xB4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x4C6F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5E</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5113</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5115</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5125</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5127</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF8</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x51CF</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x51E9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5483</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5485</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5495</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5497</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5515</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5517</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x552B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5535</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5A35</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5C13</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5C5A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5C5B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D89</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x81</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D8B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D8D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x61</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D8F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D91</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D93</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xB4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D95</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x41</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D97</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x96</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D99</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x37</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D9B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x81</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D9D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x31</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5D9F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x71</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5DA1</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5DA3</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x64</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5DA5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x27</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x5DA7</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6008</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6009</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x613A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x613C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x23</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x613D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x613E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6142</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6143</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x63</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6144</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x9</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6145</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xB</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6146</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x24</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6147</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x30</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6148</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x90</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6149</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xB2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x614A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x43</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x614B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x614C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x614D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x12</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x614E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x30</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x614F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x98</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6150</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6157</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x615C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x615D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x615E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x66</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x615F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6160</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x616C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x42</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x616D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x616E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xAC</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x616F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6170</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x49</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6171</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6172</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xB1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6173</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x29</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6176</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x24</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6177</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x93</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6178</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6179</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x45</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x617A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x48</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x617B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x14</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x617C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x26</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x617D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x94</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x617E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x617F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6182</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x15</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6194</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6195</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7E</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x6A5F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9002</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x11</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9200</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9201</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x49</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9202</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9203</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9204</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9205</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9206</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9207</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9208</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9209</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x920A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x920B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x51</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x920C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x920D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x53</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x920E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x920F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x55</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9210</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9211</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x57</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9212</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9213</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x59</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9214</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9215</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9216</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9217</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9218</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9219</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x921A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x921B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x61</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x921C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x921D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x63</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x921E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x921F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x65</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9220</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9221</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x67</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9300</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x80</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9301</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xCD</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9302</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9306</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9307</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9309</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x46</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x930A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x46</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x930C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x930D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x930F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x51</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9310</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9312</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x30</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9313</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x16</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9324</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9327</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x932A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x932D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9330</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9331</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9332</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x15</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9333</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9334</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9335</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9336</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9337</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9338</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9339</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x933A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x933B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x933C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x933D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x933E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x933F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9340</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9341</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9342</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9343</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9344</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9345</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9346</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF800</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xD9</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF801</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xD9</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF802</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x41</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF803</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF804</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x55</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF805</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF806</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xDC</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF807</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF808</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x81</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF809</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xD1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF80A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x31</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF80B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF80C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF80D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xBA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF80E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x70</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF80F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x47</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF810</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF811</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xBA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF812</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x70</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xF813</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x47</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3729</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xB8E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xB8F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xB90</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xB91</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x37</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xB92</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xB93</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xB8</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xB94</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xB95</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3060</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3061</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3063</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3150</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3151</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3152</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3153</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3190</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x325C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3260</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3261</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3269</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x327D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3280</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3281</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3282</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3283</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3284</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3285</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3286</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3287</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3288</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3289</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x328A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x7468</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x7B65</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x7B67</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x7B69</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x7B6B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x7B6D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x7B6F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x7B70</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x8573</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x8602</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x861F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x8760</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x901F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x64</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9760</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9762</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9767</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9769</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x84</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x976B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x84</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x976D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x976F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9771</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9772</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9805</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9822</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9843</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9902</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9903</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9904</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9905</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x990E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9944</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9947</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x994A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x994B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x994C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x994D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x994E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x994F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9950</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9951</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9952</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9953</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9954</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9955</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x996E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x996F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9970</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A08</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A09</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A0A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A0B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A0C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A0D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A0E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A0F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A10</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A11</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A12</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A13</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A14</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A2B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A2C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A2D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A2E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A2F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A36</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A37</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A3F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A40</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A41</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A42</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A43</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A44</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A4C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A4D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A4E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A4F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A50</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A54</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A55</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A5C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A5E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A64</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A65</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A66</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A67</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A6F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A70</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A71</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A72</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9A73</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AAC</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AAD</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AAE</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AAF</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB0</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB1</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB2</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB3</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB4</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB6</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB7</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB8</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AB9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9ABA</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9ABB</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9ABC</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9ABD</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9ABE</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9ABF</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AC0</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x9AC1</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x7</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA000</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA001</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA002</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA003</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA004</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA005</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA017</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA019</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA01B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA01D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA023</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x31</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA02F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA041</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA047</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA068</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA069</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA06A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA06B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA06C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA06D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA06E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA06F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA070</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA075</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA077</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA079</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA07B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA07D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA07F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0AD</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0AE</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0AF</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0B6</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0B7</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0B8</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0B9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0BA</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0BB</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0BD</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0C3</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0C9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA0D5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA100</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA101</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA102</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA103</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA104</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA105</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA117</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA119</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA11B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA11D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA123</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x31</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA12F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA13B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA13D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA13F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA141</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA147</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA168</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA169</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA16A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA16B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA16C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA16D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA16E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA16F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA170</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1B6</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1B7</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1B8</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1B9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1BA</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1BB</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1BD</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x42</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1C3</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x42</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1C9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA1D5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA200</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA201</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA202</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA203</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA204</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA205</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA217</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA219</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA21B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA21D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA223</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x31</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA22F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA241</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA247</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA268</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA269</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA26A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA26B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA26C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA26D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA26E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA26F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA270</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA271</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA272</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA273</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA275</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA277</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA279</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA27B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA27D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA27F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x30</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA2B6</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA2B7</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA2B8</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA2B9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA2BA</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA2BB</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA2BD</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA2D5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA300</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA301</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA302</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA303</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA304</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA305</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA317</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA319</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA31B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA31D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA323</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x31</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA32F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA341</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA347</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA368</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA369</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA36A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA36B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x30</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA36C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA36D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA36E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA36F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA370</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA371</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x30</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA372</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA373</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA3B6</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA3B7</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA3B8</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA3B9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA3BA</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA3BB</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA3BD</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x42</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA3D5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA400</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA401</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA402</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA403</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA404</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA405</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA407</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA409</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA40B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA40D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA413</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x31</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA41F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA431</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA437</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA454</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA455</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA456</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA457</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA458</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA459</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA45A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA45B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA45C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA45D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA45E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA45F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA48D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA48E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA48F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x18</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA496</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA497</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA498</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA499</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA49A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA49B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA49D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA4A3</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA4A9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x40</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA4B5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA500</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA501</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA502</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA503</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA504</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA505</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA507</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA509</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA50B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA50D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA513</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x31</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA51F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x50</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA52B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA52D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA52F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x35</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA531</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA537</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA554</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA555</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA556</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA557</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA558</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA559</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA55A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA55B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA55C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA55D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA55E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA55F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA596</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA597</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA598</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA599</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA59A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA59B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA59D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x42</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA5A3</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x42</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA5A9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA5B5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA653</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x84</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA65F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA6B5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x84</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA6C1</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA74F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA753</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFE</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA75D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA75F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA7B5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xA7C1</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF0F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xB</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF10</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF11</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF12</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x16</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF13</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF14</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF15</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2D</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF16</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF17</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF18</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF19</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF1A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF1B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xB3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF1C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF1D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF1E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF1F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1E</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF20</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF21</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6E</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF22</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x24</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF23</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF24</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x64</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF25</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1E</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF26</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF27</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3E</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF28</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1A</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF29</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF2A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x28</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF2B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x17</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF2C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x14</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF2D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF2E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF2F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF30</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF31</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF32</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF33</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF34</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF35</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF36</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF37</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF38</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF39</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF3A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF3B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF7C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF7D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xFF</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF7E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xE0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF7F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x60</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF80</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x19</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF81</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x21</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF82</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xAF83</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xBD03</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA00</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA1E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA1F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA21</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA23</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA2C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA2D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA2F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA30</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA32</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA35</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x28</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA37</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x80</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA39</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA3B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA3C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x20</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA3D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x20</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA43</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA45</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA46</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA47</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x99</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA48</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA49</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x99</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA72</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA73</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA75</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA77</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x4</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA80</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA81</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x30</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA84</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA86</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA89</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x28</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA8B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x80</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA8D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA8F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA90</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x20</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA91</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x20</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA97</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA99</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA9A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA9B</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x99</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA9C</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCA9D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x99</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAAB</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x28</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAAD</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x39</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAAE</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x53</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAAF</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x67</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAB0</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x45</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAB1</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x47</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAB2</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAB3</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6B</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAB4</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAB5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8C</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAB7</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAB8</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x6</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAB9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCABA</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCABB</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCABC</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x33</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCABD</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x73</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCABE</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCABF</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x17</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAC0</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x28</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAC1</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xC5</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAC2</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x8</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAC4</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x25</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAC5</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAC6</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAC8</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x15</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAC9</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x78</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCACA</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1E</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCACF</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x60</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xCAD1</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x28</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xD01A</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xD080</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xD081</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x10</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xD7C0</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xD7C1</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0xD7C2</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2F</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3031</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3011</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x11</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3033</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3100</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3101</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x48</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3102</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3103</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x28</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3104</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3105</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xEA</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3106</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x3</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3107</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0xF0</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x315D</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x2</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x315E</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x315F</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3160</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3161</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3162</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3163</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3164</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
      <!--Register setting configuration
          Contains: register address, register data, register address type, register data type,
              operation and delay in micro seconds -->
      <regSetting>
        <!--Register address that is accessed -->
        <registerAddr>0x3165</registerAddr>
        <!--If operation is WRITE, registerData is the data value to be written into the specified register address
            If operation is READ, registerData is the number of bytes to be read from the specified register address -->
        <registerData>0x1</registerData>
        <!--Register address / data size in bytes -->
        <regAddrType range="[1,4]">2</regAddrType>
        <!--Register address / data size in bytes -->
         <regDataType range="[1,4]">1</regDataType>
        <!--Type of the operation
            Valid values are: WRITE, READ, POLL -->
        <operation>WRITE</operation>
        <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
        <delayUs>0x0</delayUs>
      </regSetting>
    </initSetting>
  </initSettings>
  <testPatternInfo>
    <testPatternData>
      <!--Test pattern mode
          Supported modes are: OFF, SOLID_COLOR, COLOR_BARS, COLOR_BARS_FADE_TO_GRAY, PN9, CUSTOM1 -->
      <mode>OFF</mode>
      <!--Sequence of register settings to configure the device -->
      <settings>
        <!--Register setting configuration
            Contains: register address, register data, register address type, register data type,
            operation and delay in micro seconds -->
        <regSetting>
          <!--Register address that is accessed -->
          <registerAddr>0x0600</registerAddr>
          <!--If operation is WRITE, registerData is the data value to be written into the specified register address
              If operation is READ, registerData is the number of bytes to be read from the specified register address -->
          <registerData>0</registerData>
          <!--Register address / data size in bytes -->
          <regAddrType range="[1,4]">2</regAddrType>
          <!--Register address / data size in bytes -->
          <regDataType range="[1,4]">1</regDataType>
          <!--Type of the operation
              Valid values are: WRITE, READ, POLL -->
          <operation>WRITE</operation>
          <!--Delay in micro seconds. Delay is 0 if not explicitly provided -->
          <delayUs>0</delayUs>
        </regSetting>
      </settings>
    </testPatternData>
  </testPatternInfo>
  <!--Color level information
      These are the default currents in various channels in complete dark light -->
  <colorLevelInfo>
    <!--White level value -->
    <whiteLevel>1023</whiteLevel>
    <!--Pedestal value for Red channel -->
    <rPedestal>64</rPedestal>
    <!--Pedestal value for GreenRed channel -->
    <grPedestal>64</grPedestal>
    <!--Pedestal value for Blue channel -->
    <bPedestal>64</bPedestal>
    <!--Pedestal value for Green Blue channel -->
    <gbPedestal>64</gbPedestal>
  </colorLevelInfo>
  <!--Information about black regions
      Multiple black regions can be provided if applicable -->
  <opticalBlackRegionInfo>
    <!--Frame dimension: contains xStart, yStart, width and height -->
    <dimension>
      <xStart>0</xStart>
      <yStart>0</yStart>
      <width>0</width>
      <height>0</height>
    </dimension>
  </opticalBlackRegionInfo>
  <!--Information about the pixel array
      Active dimension and dummy pixels width are provided -->
  <pixelArrayInfo>
    <!--Width and height of the frame or subframe -->
    <activeDimension>
      <width>5488</width>
      <height>4112</height>
    </activeDimension>
    <!--Dummy pixels surrounding the active pixel array -->
    <dummyInfo>
      <left>0</left>
      <right>0</right>
      <top>0</top>
      <bottom>0</bottom>
    </dummyInfo>
  </pixelArrayInfo>
  <!--Application delay information -->
  <delayInfo>
    <!--Number of frames required to apply the linecount -->
    <linecount>0</linecount>
    <!--Number of frames required to apply the gain -->
    <gain>0</gain>
    <!--Maximum pipeline delay in number of frames -->
    <maxPipeline>2</maxPipeline>
    <!--Number of frames to skip -->
    <frameSkip>1</frameSkip>
  </delayInfo>
  <sensorProperty>
    <!--Pixel size in micro meters -->
    <pixelSize>1.12</pixelSize>
    <!--Crop factor -->
    <cropFactor>5.78</cropFactor>
    <!--Sensing method of senosor
        Supported sensing methods: UNDEFINED, ONE_CHIP_COLOR_AREA, TWO_CHIP_COLOR_AREA
        THREE_CHIP_COLOR_AREA, COLOR_SEQUENCE_AREA, TRILINEAR, COLOR_SEQUENCE_LINEAR -->
    <sensingMethod>ONE_CHIP_COLOR_AREA</sensingMethod>
  </sensorProperty>
  <noiseCoefficientBayer>
    <!-- Coefficient for R plane -->
    <R>
      <gradient_S>1.91466753847e-06</gradient_S>
      <offset_S>5.5015202392e-05</offset_S>
      <gradient_O>9.96925869529e-12</gradient_O>
      <offset_O>4.26772125882e-07</offset_O>
    </R>
    <!-- Coefficient for Gr plane -->
    <Gr>
      <gradient_S>1.64666856045e-06</gradient_S>
      <offset_S>7.79831779831e-05</offset_S>
      <gradient_O>7.26448241633e-12</gradient_O>
      <offset_O>3.84876013871e-07</offset_O>
    </Gr>
    <!-- Coefficient for Gb plane -->
    <Gb>
      <gradient_S>1.67818791546e-06</gradient_S>
      <offset_S>7.76152594406e-05</offset_S>
      <gradient_O>7.12905861086e-12</gradient_O>
      <offset_O>3.17486707165e-07</offset_O>
    </Gb>
    <!-- Coefficient for B plane -->
    <B>
      <gradient_S>1.60041172684e-06</gradient_S>
      <offset_S>0.00030497391975</offset_S>
      <gradient_O>1.15333574878e-11</gradient_O>
      <offset_O>-2.63007274858e-06</offset_O>
    </B>
  </noiseCoefficientBayer>
</sensorDriverData>
