<?xml version="1.0" encoding="utf-8" ?>
<!--========================================================================-->
<!-- Copyright (c) 2017-2018 Qualcomm Technologies, Inc.                         -->
<!-- All Rights Reserved.                                                   -->
<!-- Confidential and Proprietary - Qualcomm Technologies, Inc.             -->
<!--========================================================================-->
<actuatorDriver
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../api/sensor/camxactuatordriver.xsd">
  <module_version major_revision="1" minor_revision="0" incr_revision="0"/>

  <!--Actuator slave information -->
  <slaveInfo>
    <!--Name of the actuator -->
    <actuatorName>dw9800</actuatorName>
    <!--8-bit or 10-bit write slave address -->
    <slaveAddress>0x18</slaveAddress>
    <!--I2C frequency mode of slave
        Supported modes are: STANDARD (100 KHz), FAST (400 KHz), FAST_PLUS (1 MHz), CUSTOM (Custom frequency in DTSI) -->
    <i2cFrequencyMode>FAST</i2cFrequencyMode>
    <!--Actuator type
        Supported types are: VCM, BIVCM -->
    <actuatorType>BIVCM</actuatorType>
    <!--Data width in bits -->
    <dataBitWidth>10</dataBitWidth>
    <!--Sequence of power configuration type and configuration value required to control power to the device -->
    <powerUpSequence>
      <!--Power setting configuration
          Contains: configType, configValue and delay in milli seconds -->
      <powerSetting>
        <!--Power configuration type
            Supported types are: MCLK, VANA, VDIG, VIO, VAF, RESET, STANDBY -->
        <configType>VAF</configType>
        <!--Configuration value for the type of configuration -->
        <configValue>0</configValue>
        <!--Delay in milli seconds -->
        <delayMs>1</delayMs>
      </powerSetting>
    </powerUpSequence>
    <!--Sequence of power configuration type and configuration value required to control power to the device -->
    <powerDownSequence>
      <!--Power setting configuration
          Contains: configType, configValue and delay in milli seconds -->
      <powerSetting>
        <!--Power configuration type
            Supported types are: MCLK, VANA, VDIG, VIO, VAF, RESET, STANDBY -->
        <configType>VAF</configType>
        <!--Configuration value for the type of configuration -->
        <configValue>0</configValue>
        <!--Delay in milli seconds -->
        <delayMs>1</delayMs>
      </powerSetting>
    </powerDownSequence>
  </slaveInfo>
  <!--Sequence of register configuration -->
  <registerConfig>
    <!--Actuator register configuration -->
    <registerParam>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">1</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">2</regDataType>
      <!--Register address that is accessed -->
      <registerAddr>0x03</registerAddr>
      <!--Register data to be programmed -->
      <registerData>0</registerData>
      <!--Actuator operations
          Supported operations are: WRITE_HW_DAMP, WRITE_DAC, WRITE, WRITE_DIR_REG, POLL, READ_WRITE -->
      <operation>WRITE_DAC_VALUE</operation>
      <!--Delay in micro seconds -->
      <delayUs>0</delayUs>
      <!--Hardware mask -->
      <hwMask>0</hwMask>
      <!--Number of bits to shift for HW -->
      <hwShift>0</hwShift>
      <!--Number of bits to shift for data -->
      <dataShift>0</dataShift>
    </registerParam>
  </registerConfig>
  <!--Sequence of register settings to configure the device -->
  <initSettings>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type, operation and delay in micro seconds -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x02</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x02</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">1</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
      <!--Delay in micro seconds -->
      <delayUs>0</delayUs>
    </regSetting>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type, operation and delay in micro seconds -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x06</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x40</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">1</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
      <!--Delay in micro seconds -->
      <delayUs>0</delayUs>
    </regSetting>
    <!--Register setting configuration
        Contains: register address, register data, register address type, register data type, operation and delay in micro seconds -->
    <regSetting>
      <!--Register address that is accessed -->
      <registerAddr>0x07</registerAddr>
      <!--If operation is WRITE, registerData is the data value to be written into the specified register address
          If operation is READ, registerData is the number of bytes to be read from the specified register address -->
      <registerData>0x7A</registerData>
      <!--Register address / data size in bytes -->
      <regAddrType range="[1,4]">1</regAddrType>
      <!--Register address / data size in bytes -->
      <regDataType range="[1,4]">1</regDataType>
      <!--Type of the operation
          Valid values are: WRITE, READ, POLL -->
      <operation>WRITE</operation>
      <!--Delay in micro seconds -->
      <delayUs>0</delayUs>
    </regSetting>
  </initSettings>
  <!--Actuator tuning parameters -->
  <tunedParams>
    <!--Initial DAC code -->
    <initialCode>150</initialCode>
    <!--Actuator region parameters for all regions -->
    <regionParams>
      <!--Actuator region parameters -->
      <region>
        <!--Macro step boundary. In Near / forward direction -->
        <macroStepBoundary>400</macroStepBoundary>
        <!--Infinity step boundary. In Far / backward direction -->
        <infinityStepBoundary>0</infinityStepBoundary>
        <!--Code per step -->
        <codePerStep>1</codePerStep>
        <!--Q Value to convert float / double to integer format -->
        <qValue>128</qValue>
      </region>
    </regionParams>
    <!--Actuator scenario ringing and damping information
        Damping parameters in forward / near direction -->
    <forwardDamping>
      <!--Actuator ringing scenario value -->
      <ringingScenario>336</ringingScenario>
      <!--Actuator damping parameters for all scenarios -->
      <scenarioDampingParams>
        <!--Actuator damping parameters for all regions -->
        <scenario>
          <!--Actuator damping parameters -->
          <region>
            <!--Actuator damping step -->
            <dampingStep>0xFFF</dampingStep>
            <!--Actuator damping delay in micro seconds that must be applied after programming damping step -->
            <dampingDelayUs>1000</dampingDelayUs>
            <!--Actuator HW parameters -->
            <hwParams>0x0000180</hwParams>
          </region>
        </scenario>
      </scenarioDampingParams>
    </forwardDamping>
    <!--Actuator scenario ringing and damping information
        Damping parameters in backward / far direction -->
    <backwardDamping>
      <!--Actuator ringing scenario value -->
      <ringingScenario>336</ringingScenario>
      <!--Actuator damping parameters for all scenarios -->
      <scenarioDampingParams>
        <!--Actuator damping parameters for all regions -->
        <scenario>
          <!--Actuator damping parameters -->
          <region>
            <!--Actuator damping step -->
            <dampingStep>0xFFF</dampingStep>
            <!--Actuator damping delay in micro seconds that must be applied after programming damping step -->
            <dampingDelayUs>1000</dampingDelayUs>
            <!--Actuator HW parameters -->
            <hwParams>0x0000FE80</hwParams>
          </region>
        </scenario>
      </scenarioDampingParams>
    </backwardDamping>
  </tunedParams>
</actuatorDriver>
