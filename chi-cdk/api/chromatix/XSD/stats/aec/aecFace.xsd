<?xml version="1.0" encoding="UTF-8"?>
<!--========================================================================-->
<!-- Copyright (c) 2016-2019 Qualcomm Technologies, Inc.                    -->
<!-- All Rights Reserved.                                                   -->
<!-- Confidential and Proprietary - Qualcomm Technologies, Inc.             -->
<!--========================================================================-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:include schemaLocation="..\..\common\globalelements.xsd"/>
	<xs:include schemaLocation="..\common\statsroipriority.xsd"/>
	<xs:include schemaLocation="..\common\statsroidifference.xsd"/>
	<xs:include schemaLocation="aecglobalelements.xsd"/>
	<!--

Face Tuning Definition

-->
	<xs:element name="Face" type="AECFaceType"/>
	<xs:complexType name="AECFaceType">
		<xs:sequence>
			<xs:element name="module_version">
				<xs:complexType>
					<xs:attribute name="major_revision" type="xs:int" fixed="8"/>
					<xs:attribute name="minor_revision" type="xs:int" fixed="0"/>
					<xs:attribute name="incr_revision" type="xs:int" fixed="0"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="parameter_version">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="revision" type="xs:string" default="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="faceMtr" type="FaceMeteringType"/>
			<xs:element name="faceConv" type="FaceConvergenceType"/>
			<xs:element name="statsROIProcess">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="statsROIProcessEnable" type="glbEnableFlagType" default="0"/>
						<xs:element name="statsROIPriority" type="chromatixStatsROIPriorityType"/>
						<xs:element name="statsROIStable" type="chromatixStatsROIDifferenceType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FaceMeteringType">
		<xs:sequence>
			<xs:element name="enableFaceROI">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" type="xs:string" default="Enable Flag for Face ROI AEC Adjustments"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="often_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="weightTemporalFilter">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Temporal weight for Face Luma and Metered luma transition. Higher weight will have faster transition to Face Luma"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="never_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="centerWeightStrength">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Specify weighting of luma in the center of Face ROI"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableLuxFaceTarget">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" type="xs:string" default="Enable Flag for for adjusting luma target based on lux index"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="luxFaceLumaTarget" type="LuxLumaTargetType"/>
			<xs:element name="statsUpdateDelayTimeEnter">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Specify the delay in time to declare official Face ROI, for detection Stability"/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="statsUpdateDelayTimeExit">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Specify the delay in time to declare official Face ROI, for detection Stability"/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableEtrColor">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" type="xs:string" default="Enable Flag for Extreme Color for face AEC"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableBackLitComp">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" type="xs:string" default="Enable Flag for Back lit compensation for face AEC"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="backlitWeighttAdjSettings">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="StartEndType">
							<xs:attribute name="description" type="xs:string" default="Threshold pair to determine backlit interpolation weight."/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="never_tune"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="thresBackLitLumaRatio">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="StartEndType">
							<xs:attribute name="description" type="xs:string" default="Threshold pair of luma ratio to determine backlit severity."/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="never_tune"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		<xs:element name="SensorHDRFaceMeteringType">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="FaceROIFactor">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:float">
								<xs:attribute name="type" default="float"/>
								<xs:attribute name="description" type="xs:string" default="Face ROI Adjustments"/>
								<xs:attribute name="range" type="xs:string" default="[0,1]"/>
								<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="enableFrontLitComp">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:boolean">
								<xs:attribute name="type" default="bool"/>
								<xs:attribute name="description" type="xs:string" default="Enable Flag for v lit compensation for face AEC"/>
								<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="frontlitWeighttAdjSettings">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="StartEndType">
								<xs:attribute name="description" type="xs:string" default="Threshold pair to determine frontlit interpolation weight."/>
								<xs:attribute name="tuning_parameter_level" type="tuning_level" default="never_tune"/>
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="thresFrontLitLumaRatio">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="StartEndType">
								<xs:attribute name="description" type="xs:string" default="Threshold pair of luma ratio to determine frontlit severity."/>
								<xs:attribute name="tuning_parameter_level" type="tuning_level" default="never_tune"/>
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
       </xs:element>
			<xs:element name="enableHistLumaTargetSuppression">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" type="xs:string" default="Enable Flag for suppressing Histogram AEC adjustments. Enabling will make larger face luma to be more stable among different background, sacrificing background brightness."/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="faceWeight">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="StartEndType">
							<xs:attribute name="description" type="xs:string" default="Min and Max face luma weight wrt face size."/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="never_tune"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="faceLumaWeightLuxIndexTrigger">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enableFaceLumaTrigger">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="Enable Flag for for adjusting luma weight based on lux index"/>
										<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="LuxFaceLumaWeight" type="LuxFaceWeightType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="faceSize">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="StartEndType">
							<xs:attribute name="description" type="xs:string" default="min and max face size to determine face weight"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="never_tune"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="faceSizeWeightLuxIndexTrigger">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enableFaceSizeTrigger">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="Enable Flag for for adjusting face size weight based on lux index"/>
										<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="LuxFaceSizeWeight" type="LuxFaceWeightType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FaceConvergenceType">
		<xs:sequence>
			<xs:element name="convSpeedAdjRatio">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Specify the adjustment of convergence speed during Face AEC convergence"/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="often_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="speedAdjDelayTimeEnter">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Specify the delay in time to start adjusting Convergence speed"/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="speedAdjDelayTimeExit">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Specify the delay in time to start adjusting Convergence speed"/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
							<xs:attribute name="tuning_parameter_level" type="tuning_level" default="rarely_tune"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
