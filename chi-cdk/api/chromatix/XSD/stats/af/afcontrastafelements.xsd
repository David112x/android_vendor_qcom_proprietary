<?xml version="1.0" encoding="UTF-8"?>
<!--========================================================================-->
<!-- Copyright (c) 2016-2019 Qualcomm Technologies, Inc.                    -->
<!-- All Rights Reserved.                                                   -->
<!-- Confidential and Proprietary - Qualcomm Technologies, Inc.             -->
<!--========================================================================-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="afglobalelements.xsd"/>
	<xs:include schemaLocation="../common/statsroidifference.xsd"/>
	<xs:element name="chromatixContrastAF" type="chromatixContrastAFType"/>
	<xs:complexType name="chromatixContrastAFType">
		<xs:sequence>
			<xs:element name="module_version">
				<xs:complexType>
					<xs:attribute name="major_revision" type="xs:int" fixed="9"/>
					<xs:attribute name="minor_revision" type="xs:int" fixed="0"/>
					<xs:attribute name="incr_revision" type="xs:int" fixed="0"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="parameter_version">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="revision" type="xs:string" default="A"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="statisticsSelection">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="AFStatisticComputationType">
							<xs:attribute name="description" default="Select H1/H2/V/HV (norm) stats to use for algo Constraints"/>
							<xs:attribute name="range" default="[0,9]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="face">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ROIProcessEnable" type="enable_flag_type" default="0"/>
						<xs:element name="ROIStable" type="chromatixStatsROIDifferenceType"/>
						<xs:element name="ROIChange" type="chromatixStatsROIDifferenceType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="track">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="TrackROIStable" type="chromatixStatsROIDifferenceType"/>
						<xs:element name="TrackROIChange" type="chromatixStatsROIDifferenceType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="fullSweep" type="chromatixAFTuningFullsweep"/>
			<xs:element name="singleSearch" type="chromatixAFTuningSingle"/>
			<xs:element name="spotlightTuning" type="chromatixAFSpotlightReserveType"/>
			<xs:element name="weightedWindow" type="chromatixAFWeightedWindowReserveType"/>
			<xs:element name="exposureCompensation" type="chromatixBAFExposureCompensation"/>
			<xs:element name="HVFocusValueStatisticWeighting" type="chromatixAFHVStatWeightReserveType"/>
			<xs:element name="stepBack" type="chromatixAFStepBackReserveType"/>
			<xs:element name="secondScan" type="chromatixAFSecondScanReserveType"/>
			<xs:element name="flatnessDetection" type="chromatixAFFlatDetectReserveType"/>
			<xs:element name="sceneChangeBV" type="chromatixAFSceneChangeBVReserveType"/>
			<xs:element name="miscellaneous" type="chromatixAFMiscellaneousType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixBAFExposureCompensation">
		<xs:sequence>
			<xs:element name="exposureCompensationEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Flag to enable/disable the exposure compensation feature. This feature stretch BAF gamma LUT to compensate the exposure change of sensor."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="kickinProgress">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Value to decide when the exposure compensate feature start, once the HAF output progress equal or larger than this value, the exposure compensate feature will start as long as the feature is enabled."/>
							<xs:attribute name="range" type="xs:string" default="[0,100]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFMiscellaneousType">
		<xs:sequence>
			<xs:element name="peakDetectInDecreaseEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="It makes Peak detection enables or not in decrease pattern. If the poor HW is used, the performance can be low. In case of this, we can set 0 to disable detecting peak in decrease pattern."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="frameSkipGoToPeak">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Frame count being skipped. It makes frame be skipped in case going to peak. It's for returing AF status after lens moves to the target position completely. Also, it's for preventing ZSL shot is taken during the lens movement is not completed."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="forceEnableFineSearch">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="It makes forcing to do fine search, or not even in case normal CAF. The previous concepts enables fine search only in the case of CAF of normal mode, not video. Regardless of the mode, if it's enabled we can do force fine search with in CAF, only in case of peak is found at first 4 frames."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="optimizePrescan">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="It makes pre scan be optimized with some code cleaning. It's already verified on customer projects. Because some pre-scan operation is changed if we apply this, we make this be configurable as tunable factor."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="optimizePeakEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="It's about another optimization changes for performance. It's also already verified on customer projects. With same reason of AFChromatixOptimize_PRESCAN, we make this be configurable as tunable factor."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFTuningFullsweep">
		<xs:sequence>
			<xs:element name="numStepsBetweenStatPoints">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Used to control how many steps to move the lens at a time during search. Effect: Should always be 1, but for some tests could be more."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="frameDelayInf">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames to skip after lens move to initial (inf) position. Effect: Bigger value will give more time for the lens to settle  after going into the inf. position."/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="frameDelayNorm">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames to skip after lens move to the next position. Effect: Bigger value will give more time for the lens to settle between steps."/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="frameDelayFinal">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames to skip after lens move to its final position where the maximum FV is registered. Effect: Bigger value will give more time for the lens to settle after going into the final position, so the FV can be observed in the logs."/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="previewAssistedAFEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Flag to enable PAAF during Fullsweep."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixStepSize">
		<xs:sequence>
			<xs:element name="region0">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Step size for far end to rgn 0 boundary. Data range: 0 to far end lens position."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="region1">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Step size for rgn 0 to rgn 1 boundary. Data range: 0 to far end lens position."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="region2">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Step size for rgn 1 to rgn 2 boundary. Data range: 0 to far end lens position."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="region3">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Step size for rgn 2 to rgn 3 boundary. Data range: 0 to far end lens position."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="region4">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Step size for rgn 3 to near end boundary. Data range: 0 to far end lens position."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixStepSizeTable">
		<xs:sequence>
			<xs:element name="prescanNormalLight">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixStepSize">
							<xs:attribute name="type" default="chromatixStepSize"/>
							<xs:attribute name="description" default="Prescan step size for normal light. Default value: {20, 12, 12, 12, 16}. Data range: 0 to far end lens position. Effect: Higher number increase speed of search, but lower accuracy. Setting too high of scan step will have adverse effect on actuator movement and result in bad stats."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="prescanLowLight">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixStepSize">
							<xs:attribute name="type" default="chromatixStepSize"/>
							<xs:attribute name="description" default="Prescan step size for normal light. Default value: {20, 12, 12, 12, 16}. Data range: 0 to far end lens position. Effect: Higher number increase speed of search, but lower accuracy. Setting too high of scan step will have adverse effect on actuator movement and result in bad stats."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="finescanNormalLight">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixStepSize">
							<xs:attribute name="type" default="chromatixStepSize"/>
							<xs:attribute name="description" default="Fine scan step size for normal light. Default value: {10, 7, 6, 6, 10}. Data range: 0 to far end lens position. Effect: Higher number increase speed of search, but lower accuracy. Setting too high of scan step will have adverse effect on actuator movement and result in bad stats."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="finescanLowLight">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixStepSize">
							<xs:attribute name="type" default="chromatixStepSize"/>
							<xs:attribute name="description" default="Fine scan step size for low light. Default value: {12, 9, 8, 9, 12}. Data range: 0 to far end lens position. Effect: Higher number increase speed of search, but lower accuracy. Setting too high of scan step will have adverse effect on actuator movement and result in bad stats."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixBVThreshold">
		<xs:sequence>
			<xs:element name="Threshold" minOccurs="8" maxOccurs="8">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="range" type="xs:string" default="[0.5,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixSingleThreshold">
		<xs:sequence>
			<xs:element name="changeRatioInc">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for detecting INCREASE trend from two points of SW stats. Effect: Higher value makes detection harder, but lower values has adverse effect of considering the trend as Flat."/>
							<xs:attribute name="range" type="xs:string" default="[1.0,1.1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="changeRatioDec">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for detecting DECREASE trend from two points of SW stats. Effect: Lower value makes detection harder, but higher values has adverse effect of considering the trend as Flat."/>
							<xs:attribute name="range" type="xs:string" default="[0.5,1.0]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="flatIncThres">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for detect flat trend in INCREASE. Effect: Lower value makes detection harder."/>
							<xs:attribute name="range" type="xs:string" default="[1.0,1.1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="flatDecThres">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for detect flat trend in DECREASE. Effect: Lower value makes detection harder."/>
							<xs:attribute name="range" type="xs:string" default="[0.5,1.0]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fvIncFlatThres">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for detect Increase trend for FV interval decision.   Effect: Lower value makes Inc detection easier "/>
							<xs:attribute name="range" type="xs:string" default="[1.0,1.1]"/>
							<xs:attribute name="default_value" type="xs:string" default="1.02"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fvDecFlatThres">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for detect Decrease trend for FV interval decision.  Effect: higher value makes Dec detection easier "/>
							<xs:attribute name="range" type="xs:string" default="[0.5,1.0]"/>
							<xs:attribute name="default_value" type="xs:string" default="0.98"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fvIncFlatThresSpotlight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for detect Increase trend for FV interval decision on Spotlight scene.   Effect: Lower value makes Inc detection easier."/>
							<xs:attribute name="range" type="xs:string" default="[1.0,1.1]"/>
							<xs:attribute name="default_value" type="xs:string" default="1.01"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fvDecFlatThresSpotlight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for detect Increase trend for FV interval decision on Spotlight scene.   Effect: Lower value makes Inc detection easier "/>
							<xs:attribute name="range" type="xs:string" default="[0.5,1.0]"/>
							<xs:attribute name="default_value" type="xs:string" default="0.99"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="macroThres">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for detect Macro Peak. Effect: Lower value makes detection harder."/>
							<xs:attribute name="range" type="xs:string" default="[0.5,1.0]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="dropThres">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for large drop in invalid trend. Effect: Lower value makes detection harder."/>
							<xs:attribute name="range" type="xs:string" default="[0.5,1.0]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="histogramDecreaseDecreaseThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Histogram threshold to detect peak in decrease decrease trend. Effect: Lower value makes detection harder."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="histogramIncreaseDecreaseThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Histogram threshold to detect peak in increase decrease trend. Effect: Lower value makes detection harder."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="threeFrameDecreaseDecreasePeakThreshold">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixBVThreshold">
							<xs:attribute name="type" default="chromatixBVThreshold"/>
							<xs:attribute name="description" default="Threshold in 3 frame decrease decrease peak. Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}. Effect: Lower value makes detection harder."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="threeFrameIncreaseDecreasePeakThreshold">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixBVThreshold">
							<xs:attribute name="type" default="chromatixBVThreshold"/>
							<xs:attribute name="description" default="Threshold in 3 frame increase decrease peak. Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}. Effect: Lower value makes detection harder."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="decreaseDecreasePeakThreshold">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixBVThreshold">
							<xs:attribute name="type" default="chromatixBVThreshold"/>
							<xs:attribute name="description" default="Threshold in decrease decrease peak. Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}. Effect: Lower value makes detection harder."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="decreaseDecreasePeakWithNoiseThreshold">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixBVThreshold">
							<xs:attribute name="type" default="chromatixBVThreshold"/>
							<xs:attribute name="description" default="Threshold in decrease decrease peak with noise present. Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}. Effect: Lower value makes detection harder."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="increaseDecreasePeakThreshold">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixBVThreshold">
							<xs:attribute name="type" default="chromatixBVThreshold"/>
							<xs:attribute name="description" default="Threshold in increase decrease peak. Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}. Effect: Lower value makes detection harder."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="increaseDecreasePeakWithNoiseThreshold">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixBVThreshold">
							<xs:attribute name="type" default="chromatixBVThreshold"/>
							<xs:attribute name="description" default=" Threshold in increase decrease peak with noise present. Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}. Effect: Lower value makes detection harder."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="flatThreshold">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixBVThreshold">
							<xs:attribute name="type" default="chromatixBVThreshold"/>
							<xs:attribute name="description" default="Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}. Effect: Lower value makes detection harder."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="spotlightFlatThresholdMarco">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="threshold for macro region to detect a flat curve for spotlight scene"/>
							<xs:attribute name="range" type="xs:string" default="[0.5,1.0]"/>
							<xs:attribute name="default_value" type="xs:string" default="0.90"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="spotlightFlatThresholdInfinity">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="threshold for infinity region to detect a flat curve for spotlight scene"/>
							<xs:attribute name="range" type="xs:string" default="[0.5,1.0]"/>
							<xs:attribute name="default_value" type="xs:string" default="0.85"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixFVScoreThreshold">
		<xs:sequence>
			<xs:element name="defaultStats">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Index to specify default stats type Do not modify unless it causes issues. Effect: Affects Stats selection."/>
							<xs:attribute name="range" type="xs:string" default="[0,2]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="scoreRatioShowDif" type="chromatixBVThreshold"/>
			<xs:element name="strictNoise">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Noise value for strictly noise. Do not modify unless it causes issues.  Affects Stats selection."/>
							<xs:attribute name="range" type="xs:string" default="[0.0,1.0]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="normalNoise">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Noise value for normal noise. Do not modify unless it causes issues. Effect: Affects Stats selection."/>
							<xs:attribute name="range" type="xs:string" default="[0.0,1.0]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="lighttNoise">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Noise value for light noise. Do not modify unless it causes issues. Effect: Affects Stats selection."/>
							<xs:attribute name="range" type="xs:string" default="[0.0,1.0]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="strongPeakThres">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for number of strong peak. Do not modify unless it causes issues. Effect: Affects Stats selection."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="strongIncThres">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for number of strong increase. Do not modify unless it causes issues. Effect: Affects Stats selection."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="strongDecThres">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Threshold for number of strong decrease Do not modify unless it causes issues. Effect: Affects Stats selection."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixSingleOptic">
		<xs:sequence>
			<xs:element name="CAFFarEnd">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Far end search limit for CAF. Default value: SINGLE_INF_LIMIT_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="CAFNearEnd">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Near end search limit for CAF. Default value: SINGLE_NEAR_LIMIT_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="TAFFarEnd">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Far end search limit for TAF. Default value: SINGLE_INF_LIMIT_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="TAFNearEnd">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Near end search limit for TAF. Default value: SINGLE_NEAR_LIMIT_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="searchRegion1">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Region boundary for non linear region for far end. Default value: SINGLE_50CM_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes. Effect: Lower value makes detection harder."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="searchRegion2">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Region boundary for linear region. Default value: SINGLE_20CM_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="searchRegion3">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Variable name: srch_rgn_3. Region boundary for non linear region for near end. Default value: SINGLE_14CM_IDX.  Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fineSearchRegion">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Boundary to use fine search from far end. Default value: SINGLE_50CM_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="farZone">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Zone boundary to consider far end for starting location. Default value: SINGLE_INF_LIMIT_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="nearZone">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Zone boundary to consider near end for starting location. Default value: SINGLE_10CM_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="midZone">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Boundary to consider middle zone (middle of far and near). Default value: SINGLE_60CM_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="farStartPosition">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Default value: SINGLE_HYP_F_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="nearStartPosition">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default=" Default value: SINGLE_10CM_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX. Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="initialPosition">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Initial search position for the first search. Default value: SINGLE_HYP_F_IDX. Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.  Constraints: Logically place these indexes."/>
							<xs:attribute name="range" type="xs:string" default="[0,10000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFSingleFrameDelay">
		<xs:sequence>
			<xs:element name="baseFrameDelay">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames to skip after lens move to start position. Effect: Bigger value will give more time for the lens to settle hence KPI will increase."/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="coarseFrameDelay">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames to skip during Coarse search of AF. Effect: Bigger value will give more time for the lens to settle between steps giving better FV, hence KPI will increase."/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fineFrameDelay">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames to skip during Fine search of AF. Effect: Bigger value will give more time for the lens to settle between steps giving better FV, hence KPI will increase."/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="singleIndex">
		<xs:restriction base="xs:string">
			<xs:enumeration value="SINGLE_NEAR_LIMIT_IDX"/>
			<xs:enumeration value="SINGLE_7CM_IDX"/>
			<xs:enumeration value="SINGLE_10CM_IDX"/>
			<xs:enumeration value="SINGLE_14CM_IDX"/>
			<xs:enumeration value="SINGLE_20CM_IDX"/>
			<xs:enumeration value="SINGLE_30CM_IDX"/>
			<xs:enumeration value="SINGLE_40CM_IDX"/>
			<xs:enumeration value="SINGLE_50CM_IDX"/>
			<xs:enumeration value="SINGLE_60CM_IDX"/>
			<xs:enumeration value="SINGLE_120CM_IDX"/>
			<xs:enumeration value="SINGLE_HYP_F_IDX"/>
			<xs:enumeration value="SINGLE_INF_LIMIT_IDX"/>
			<xs:enumeration value="SINGLE_MAX_IDX"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="chromatixAFTuningSingle">
		<xs:sequence>
			<xs:element name="index" maxOccurs="12">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Index mapping from physical distance to lens position. Data range: 0 to far end lens index. Constraints: Refer to the tuning guide document on how to tune these paramters.  Effect: Determines boundaries of decision in Single AF algo.  NOTE: It recommended to the total movable logical lens position range as [0 - 399] inorder to have same logical lens position across multiple actuators and sensors."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="actuatorType">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default=" Type of Actuator used in camera module. Data range: ACT_TYPE_OPENLOOP(1) or ACT_TYPE_CLOSELOOP(0). Effect: Affects behaviors in algorithm."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="isHysteresisCompensationNeeded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Flag to indicate if needed hysteresis, depending on actuator. Effect: Affects behaviors in algorithm."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="stepIndexPerMicroMeter">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Number of step index per micro-meter."/>
							<xs:attribute name="range" type="xs:string" default="[1,65535]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="previewAssistedAFEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Enable flag to use SW stats. It is up to Algo to decide whether to enable sw stats in the end. For some modes in Video use case we cannot enable SW stats. Effect: Setting 0 will use HW stats."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="TAFStepTable">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixStepSizeTable">
							<xs:attribute name="type" default="chromatixStepSizeTable"/>
							<xs:attribute name="description" default="Scan Step size for Touch AF"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="CAFStepTable">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixStepSizeTable">
							<xs:attribute name="type" default="chromatixStepSizeTable"/>
							<xs:attribute name="description" default="Scan Step size for Continuous AF"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="software">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixSingleThreshold">
							<xs:attribute name="type" default="chromatixSingleThreshold"/>
							<xs:attribute name="description" default="Set of algorithm Thresholds to find peak len position."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="hardware">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixSingleThreshold">
							<xs:attribute name="type" default="chromatixSingleThreshold"/>
							<xs:attribute name="description" default="Set of algorithm Thresholds to find peak len position."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="optics">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixSingleOptic">
							<xs:attribute name="type" default="chromatixSingleOptic"/>
							<xs:attribute name="description" default="_single_optic_t contains all the optic information for setting up boundary for search regions in terms of lens position index measured."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="FVScoreThreshold">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chromatixFVScoreThreshold">
							<xs:attribute name="type" default="chromatixFVScoreThreshold"/>
							<xs:attribute name="description" default="Set of algorithm thresholds for single AF to find peak len position. Note: This feature is currently not supported in 310 header so no need to tune the below parameters."/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="frameDelay" type="chromatixAFSingleFrameDelay"/>
			<xs:element name="BVGain" minOccurs="8" maxOccurs="8">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" default="Gain thresholds to determine BV Lux level. Default value: [-30.0f, -0.50f, 0.50f, 1.50f, 2.50f, 3.20f, 6.00f, 8.00f].  Constraints: Do not modify unless it causes issues. Effect: Changes Lux Level decision."/>
							<xs:attribute name="range" type="xs:string" default="[unbounded,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ignoreFirstInvalidFrame">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Enable flag to Determine the first frame as valid or not.like we can skip the first fv value for the reverse search "/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFSpotlightReserveType">
		<xs:sequence>
			<xs:element name="enableSpotlightFilterSwitch">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="A setting to turn on spotlight filter switch logic which can switch to a specific spot light filter when detecting spot light scene. Constraints: the function needs enable with spot light scene detection."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="secondOrderSpotlightFilterCoefficients" minOccurs="10" maxOccurs="10">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Second-order spotlight filter coefficients [10]. Description: Spotlight filter listed on BAF tuning document. Constraints: need to check which sensor mode (zsl mode, non-zsl/binning mode) you are using and fill in suitable filter coefficient, refer to the tuning guide document under BAF settings for more details."/>
							<xs:attribute name="range" type="xs:string" default="[-5,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fourthOrderSpotlightFilterCoefficients" minOccurs="10" maxOccurs="10">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Fourth-order spotlight filter coefficients [10]. Description: Spotlight filter listed on BAF tuning document. Constraints: need to check which sensor mode (zsl mode, non-zsl/binning mode) you are using and fill in suitable filter coefficient, refer to the tuning guide document under BAF settings for more details."/>
							<xs:attribute name="range" type="xs:string" default="[-5,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixRegionTableType">
		<xs:sequence>
			<xs:element name="numEntries">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Number of table entry"/>
							<xs:attribute name="range" type="xs:string" default="[0,100]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="weight" maxOccurs="25">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="weight value for this entry."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixLumaTableEntryType">
		<xs:sequence>
			<xs:element name="luma">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="luma value for this entry."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="weight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="weight value for this entry."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixLumaTableType">
		<xs:sequence>
			<xs:element name="numEntries">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Number of table entry"/>
							<xs:attribute name="range" type="xs:string" default="[0,20]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="lumaEntries" type="chromatixLumaTableEntryType" maxOccurs="20"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixFaceTableEntryType">
		<xs:sequence>
			<xs:element name="fvIndex">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="the fv index of this entry."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="weight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="weight value for this entry."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixFaceTableType">
		<xs:sequence>
			<xs:element name="numEntries">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Number of table entry"/>
							<xs:attribute name="range" type="xs:string" default="[0,20]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="indexEntries" type="chromatixFaceTableEntryType" maxOccurs="20"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFWeightedWindowReserveType">
		<xs:sequence>
			<xs:element name="enableAFRegionWeightTable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="This flag use to turn on a weighted focus value function which weight is dependent on window position. We have multiple window in ROI region. Distance of lens to object has slightly different between each window. We want image 	is as sharp as possible in center ROI region. So we generate a weight to each window according to windows position when we measure focus value from each window. Center window will has larger weight and border has less weight. This 	feature only work when ROI region has 5x5 windows."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="AFRegionWeightTable" type="chromatixRegionTableType"/>
			<xs:element name="enableAFLumaWeightTable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="This flag use to turn on a weighted focus value function which weight is dependent on luma value. We have multiple window in ROI region. Focus value is unreliable in overexposure situation. This function give a lower weight to 		window if it is overexposure when calculating focus value. This feature only work when ROI region has 5x5 windows."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="AFLumaWeightTable" type="chromatixLumaTableType"/>
			<xs:element name="enableAFFaceWeightTable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="This flag use to turn on a weighted focus value function which weight is dependent on luma value. We have multiple window in ROI region. Focus value is unreliable in overexposure situation. This function give a lower weight to 		window if it is overexposure when calculating focus value. This feature only work when ROI region has 5x5 windows."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="AFFaceWeightTable" type="chromatixFaceTableType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFStepBackReserveType">
		<xs:sequence>
			<xs:element name="stepBackEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="1 is enabled, 0 is disabled. It determines whether 'step back' is enabled by the chromatix, or not. The previous way is that the value can be only 1 for closed-loop or 2 for open-loop. But, when the peak is near of the current position in pre-scan, it leads lots of several back/forth lens movements trial for finding proper peak. Finally, it decreases AF performance. So, this feature makes step back values be tunable according to the circumstances. The variation of the step back has 4 cases, and it involves the meaning 'direction from'. - Start infinity, Reverse infinity, Start Macro, Reverse Macro. "/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="stepBackStartInfinity">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance. It means how many steps back in case of Start in Infinity. If AFChromatixStepBackEnable is 0, it is ignored. Please check with AFChromatixStepBackEnable."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="stepBackReverseInfinity">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance. It means how many steps back in case of Reverse in Infinity. If AFChromatixStepBackEnable is 0, it is ignored. Please check with AFChromatixStepBackEnable."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="stepBackStartMacro">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It means how many steps back in case of start in Macro. If AFChromatixStepBackEnable is 0, it is ignored. Please check with AFChromatixStepBackEnable."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="stepBackReverseMacro">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It means how many steps back in case of Reverse in Macro. If AFChromatixStepBackEnable is 0, it is ignored. Please check with AFChromatixStepBackEnable."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFSecondScanReserveType">
		<xs:sequence>
			<xs:element name="fRatioMin">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides minimum value for comparing ratio during calculating second scan range. If it's 0, the fRatio_min is 1.0f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fRatioMax">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides maximum value for comparing ratio during calculating second scan range. If it's 0, the fRatioMax is 4.0f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="firstPreviousY1">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides parameter 1st previous Y1 value for comparing ratio during calculating second scan range. If it's 0, the fRatio_max is 0.8f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="nextY1">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides parameter 1st next Y1 value for comparing ratio during calculating second scan range. If it's 0, the fRatio_max is 0.3f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="firstPreviousY2">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides parameter 1st previous Y2 value for comparing ratio during calculating second scan range. If it's 0, the fRatio_max is 0.8f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="nextY2">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides parameter 1st next Y2 value for comparing ratio during calculating second scan range. If it's 0, the fRatio_max is 0.3f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="secondPreviousY1">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides parameter 2nd previous Y1 value for comparing ratio during calculating second scan range. If it's 0, the fRatio_max is 0.8f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="secondNextY1">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides parameter 2nd next Y1 value for comparing ratio during calculating second scan range. If it's 0, the fRatio_max is 0.3f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="secondPreviousY2">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides parameter 2nd next Y2 value for comparing ratio during calculating second scan range. If it's 0, the fRatio_max is 0.8f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="secondNextY2">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance.It provides parameter 2nd previous Y2 value for comparing ratio during calculating second scan range. If it's 0, the fRatio_max is 0.3f. If it's positive number, it's effective."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFFlatDetectReserveType">
		<xs:sequence>
			<xs:element name="flatDetectSupportEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="It enables flat curve detection feature. If it's 0 it disables, if it's1 it enables."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVThresholdFlatDetect">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance. It's the threshold for BV in case of flat detection. It's valid if AFChromatixFlatDetect_SUPPORT is enabled. If not, it's ignored."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="flatIncreasingThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance. It's the threshold for BV in case of increase pattern."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="flatDecreasingThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance. It's the threshold for BV in case of decrease pattern"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFSceneChangeBVReserveType">
		<xs:sequence>
			<xs:element name="sceneChangeByBVEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="It enables/disables the feature of scene change by BV. It affects the CAF speed performance with added BV and FV. It makes AF be reinforced even without gyro and with SAD. Lens is triggered very frequently even though scene is changed very slow at the far area. When we made less sensitive for scene change, then CAF triggering is very slow."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVUnstableThresholdOutdoor">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It defined unstable threshold in outdoor. Please check with AFChromatixSceneChangeByBVEnable"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVStableThresholdOutdoor">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It defined stable threshold in outdoor. Please check with AFChromatixSceneChangeByBVEnable"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVTriggerCountThresholdOutdoor">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It defined trigger count threshold in outdoor. Please check with AFChromatixSceneChangeByBVEnable"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVUnstableThresholdNormalLux">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It defined unstable threshold in normal lux. Please check with AFChromatixSceneChangeByBVEnable"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVStableThresholdNormalLux">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It defined stable threshold in normal lux. Please check with AFChromatixSceneChangeByBVEnable"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVTriggerCountThresholdNormalLux">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It defined trigger count threshold normal lux. Please check with AFChromatixSceneChangeByBVEnable"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVUnstableThresholdLowLux">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It defined unstable threshold in low lux. Please check with AFChromatixSceneChangeByBVEnable"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVStableThresholdLowLux">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It defined stable threshold in low lux. Please check with AFChromatixSceneChangeByBVEnable"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BVTriggerCountThresholdLowLux">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It defined trigger count threshold in low lux. Please check with AFChromatixSceneChangeByBVEnable"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="AFStatisticComputationType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AF_StatsH1"/>
			<xs:enumeration value="AFStatsH1_NORM"/>
			<xs:enumeration value="AF_StatsH2"/>
			<xs:enumeration value="AFStatsH2_NORM"/>
			<xs:enumeration value="AF_Stats_V"/>
			<xs:enumeration value="AFStats_V_NORM"/>
			<xs:enumeration value="AF_Stats_HV"/>
			<xs:enumeration value="AF_Stats_HV_NORM"/>
			<xs:enumeration value="AF_Stats_Scale"/>
			<xs:enumeration value="AF_Stats_Scale_NORM"/>
			<xs:enumeration value="AF_Stats_MAX"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="chromatixAFHVStatWeightReserveType">
		<xs:sequence>
			<xs:element name="enableHVStatsRatio">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="A switch to enable weighted focus value. Focus value will be H_weight*H+(1-H_weight)*V if this flag set to 1."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="hvFocusValueWeight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Weight of H focus value and V focus value. Focus value will be H_weight*H+(1-H_weight)*V in horizontal and (1-H_weight)*H+H_weight*V in horizontal in portrait."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
