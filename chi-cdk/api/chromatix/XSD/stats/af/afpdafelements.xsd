<?xml version="1.0" encoding="UTF-8"?>
<!--========================================================================-->
<!-- Copyright (c) 2016-2019 Qualcomm Technologies, Inc.                    -->
<!-- All Rights Reserved.                                                   -->
<!-- Confidential and Proprietary - Qualcomm Technologies, Inc.             -->
<!--========================================================================-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">
	<xs:include schemaLocation="afglobalelements.xsd"/>
	<xs:include schemaLocation="..\common\statsroidifference.xsd"/>
	<xs:element name="chromatixPDAF" type="chromatixPDAFType"/>
	<xs:complexType name="chromatixPDAFType">
		<xs:sequence>
			<xs:element name="module_version">
				<xs:complexType>
					<xs:attribute name="major_revision" type="xs:int" fixed="9"/>
					<xs:attribute name="minor_revision" type="xs:int" fixed="0"/>
					<xs:attribute name="incr_revision" type="xs:int" fixed="0"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="parameter_version">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="revision" type="xs:string" default="A"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="is2PDEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" type="xs:string" default="Enable PDAF specific to dual-photodiode type image sensor"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ROI" type="chromatixPDROIType"/>
			<xs:element name="focusTable" type="chromatixPDFocusTableType"/>
			<xs:element name="noiseTable" type="chromatixPDNoiseTableType"/>
			<xs:element name="confidenceTable" type="chromatixPDConfidenceTableType"/>
			<xs:element name="confidenceHighTable" type="chromatixPDConfidenceTableType"/>
			<xs:element name="fallbackConfidence">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Threshold applied to PD confidence level to decide when to perform fallback to other AF algorithm."/>
							<xs:attribute name="range" type="xs:string" default="[0,1023]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="stableTable" type="chromatixPDStableTableType"/>
			<xs:element name="dofScalerTable" type="chromatixPDDofScalerTableType"/>
			<xs:element name="focusScan" type="chromatixPDFocusScanType"/>
			<xs:element name="sceneMonitor" type="chromatixPDMonitorType"/>
			<xs:element name="PDPreprocessing" type="chromatixPDPreprocessingType"/>
			<xs:element name="PDInternal" type="chromatixPDInternalType"/>
			<xs:element name="PDMultiWindow" type="chromatixPDMultiwindowType"/>
			<xs:element name="enableCheckVHStatsRatio">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Sony confirms that type 1 lib will generate inaccurate PD value with high confidence in scene of 5-30 degree stripe line. We use this flag to enable a function which will detect this scene by ratio of H, V focus value and set PDAF 'isConfidence' false when this scene is detected."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="VHStatsRatioUnconfidentThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Sony confirms that type 1 lib will generate inaccurate PD value with high confidence in scene of 5-30 degree stripe line. We set PD 'isConfidence' false if ratio H, V focus value is larger than this threshold."/>
							<xs:attribute name="range" type="xs:string" default="[0,20]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enablePDEarlyInterrupt">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If early interrupt is supported and PDLib is handled in sensor side, this flag should be true, otherwise stays false. Important dependency, please pay attention. PD_early_interrupt_enabled = 1 then focus_conv_frame_skip = 0 PD_early_interrupt_enabled = 0 then focus_conv_frame_skip = 1 For PD early interrupt to work, BAF ROI should be the same as PDAF ROI.  PDAF ROI will be set in imx362_pdaf.h. Look for (pdaf_address_end_hori, etc) In tuning header h_clip_ratio_normal_light = pdaf_address_end_hori - pdaf_address_start_hori. The same for vertical."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="dynamicFrameSkipVBlankThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="We don't have to do frame skip for PDAF when VBlank time is larger this threshold"/>
							<xs:attribute name="range" type="xs:string" default="[0.0, 30.0]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ledPdafMaxFrameAllow">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="enable_flag_type">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="LED PDAF convergence max frame control enable flag. When this flag is enabled, it will read LED_PDAF_max_frame_cnt and force LED PDAF to complete converge when converge frame is more than the max allowed. This prevents power drain and app timeout in case of constantscene panning."/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="maxFrameCnt">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="PDAF stats is forced to enter focus converge done when LED pd converge is over this threshold"/>
										<xs:attribute name="range" type="xs:string" default="[1,200]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="sparsePDTouchFaceConfidenceThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Confidence threshold required to determine if to fallback or run PDAF while touch/face."/>
							<xs:attribute name="range" type="xs:string" default="[0,1023]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="sparsePDTouchFaceLowDefocusConfidenceThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Confidence threshold required to determine if to fallback or fine scan while touch/face."/>
							<xs:attribute name="range" type="xs:string" default="[0,1023]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableEnterLSPLowConfidenceHunting">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="PD variation is large in some test scene and cause hunting issue. Force this test scene enter to LSP when sign of PD is reverted in some times. LSP will use contrast information to find final position."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="LSPLowConfidenceHuntingThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="PDAF stats is forced to enter focus converge done when sign of PD reverted counter is over this threshold."/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="face" type="chromatixPDFaceControlType"/>
			<xs:element name="touch" type="chromatixPDTouchControlType"/>
			<xs:element name="track" type="chromatixPDTrackControlType"/>
			<xs:element name="convergeDoneFilter" type="chromaitxPDConvergeDoneFilterType"/>
			<xs:element name="forceEnterFineSearch" type="chromatixPDForceEnterFineSearchType"/>
			<xs:element name="advancedSparseControl" type="chromatixAdvancedSparsePDControlType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDROIConfigType">
		<xs:sequence>
			<xs:element name="ROILocationY">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Y-coordinate for top-left corner of ROI in grid-based stats"/>
							<xs:attribute name="range" type="xs:string" default="[0,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ROILocationX">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="X-coordinate for top-left corner of ROI in grid-based stats"/>
							<xs:attribute name="range" type="xs:string" default="[0,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ROINumRows">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Height of ROI in number of rows in grid-based stats"/>
							<xs:attribute name="range" type="xs:string" default="[1,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ROINumCols">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Width of ROI in number of columns in grid-based stats"/>
							<xs:attribute name="range" type="xs:string" default="[1,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDROIType">
		<xs:sequence>
			<xs:element name="Configuration" type="chromatixPDROIConfigType" maxOccurs="10"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDNoiseTableEntryType">
		<xs:sequence>
			<xs:element name="noiseGain">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Noise level in dB computed as as 20.0 * log10(sensor_gain)"/>
							<xs:attribute name="range" type="xs:string" default="[0,40]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="noiseGainMultiplier">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Scaler by which size of rms noise increases. Scaler value of 1 implies rms noise is identical to the case where sensor gain is 1X"/>
							<xs:attribute name="range" type="xs:string" default="[1,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDConfidenceTableEntryType">
		<xs:sequence>
			<xs:element name="noiseGain">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Noise level in dB computed as as 20.0 * log10(sensor_gain)"/>
							<xs:attribute name="range" type="xs:string" default="[0,40]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="minimumConfidence">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Minimum confidence level at the given noise level in dB. Defocus valuese whose confidence level is below the minimum threshold is deemed not confident"/>
							<xs:attribute name="range" type="xs:string" default="[0,1023]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDStableTableEntryType">
		<xs:sequence>
			<xs:element name="FPS">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Frame rate per second"/>
							<xs:attribute name="range" type="xs:string" default="[0,120]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="minimumStableCount">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames in which defocus values must remain stable in order for PDAF algorithm to trigger focus convergence"/>
							<xs:attribute name="range" type="xs:string" default="[0,30]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDDofScalerEntryType">
		<xs:sequence>
			<xs:element name="normalizedLensPosition">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Normalized lens position, if lens position is near end, the value is 1, if lens position is far end, the value is 0."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="dofScaler">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="DOF scaler value at the given normalized lens position, this scaler will be applied to fine scan step size, defocus threshold, focus done threshold etc./"/>
							<xs:attribute name="range" type="xs:string" default="[1,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDFocusTableEntryType">
		<xs:sequence>
			<xs:element name="defocus">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Defocus in logical lens position unit"/>
							<xs:attribute name="range" type="xs:string" default="[0,500]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="movePercent">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Percentage lens movement to target lens position"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDNoiseTableType">
		<xs:sequence>
			<xs:element name="noiseEntries" type="chromatixPDNoiseTableEntryType" maxOccurs="20"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDConfidenceTableType">
		<xs:sequence>
			<xs:element name="confidenceEntries" type="chromatixPDConfidenceTableEntryType" maxOccurs="20"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDFocusTableType">
		<xs:sequence>
			<xs:element name="focusEntries" type="chromatixPDFocusTableEntryType" maxOccurs="20"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDStableTableType">
		<xs:sequence>
			<xs:element name="stableEntries" type="chromatixPDStableTableEntryType" maxOccurs="20"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDDofScalerTableType">
		<xs:sequence>
		<xs:element name="dofScalerEntries" type="chromatixPDDofScalerEntryType" maxOccurs="20"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDFocusScanType">
		<xs:sequence>
			<xs:element name="focusConvergeFrameSkip">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frame skip to use during PDAF focus convergence"/>
							<xs:attribute name="range" type="xs:string" default="[0,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableFineScan">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Enable contrast-based fine scan following PDAF focus convergence"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="minimumFineScanRange">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Minimum fine scan range expressed as scaler multiple to computed fine scan step size."/>
							<xs:attribute name="range" type="xs:string" default="[1,2]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fineScanStepSize">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Minimum fine scan step size to use for contrast-based fine scan following PDAF focus converge"/>
							<xs:attribute name="range" type="xs:string" default="[1,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="focusDoneThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Minimum absolute defocus value below which focus converge is deemed to be done"/>
							<xs:attribute name="range" type="xs:string" default="[0,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableFineScanExtension">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Enables contrast-based fine scan following PDAF focus convergence to extend search limit as needed to find focus peak"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="firstRunNotConfidenceAdd">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Increases frame count by which PDAF waits for valid defocus statistics to arrive for the first camera turn on"/>
							<xs:attribute name="range" type="xs:string" default="[0,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDMonitorType">
		<xs:sequence>
			<xs:element name="waitAfterFocusCount">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames to wait after focus search finishes before detecting out-of-focus (or defocus) condition"/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="waitConfidenceRecoverCount">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames to wait for confidence level to recover from a temporary drop (e.g. scene change)"/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="defocusedThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Minimum size of absolute defocus below which lens is assumed to be in focus"/>
							<xs:attribute name="range" type="xs:string" default="[0,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="depthStableThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Maximum size of frame-to-frame difference in temporally filtered defocus above which defocus is deemed not stable. Focus convergence can only be triggered if defocus is deemed stable"/>
							<xs:attribute name="range" type="xs:string" default="[0,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="defocusStableFilterLength">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Size of moving average filter applied to defocus sample"/>
							<xs:attribute name="range" type="xs:string" default="[0,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableTriggerSuppressionBySceneChange">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If enabled, focus trigger is suppressed until scene change is also detected"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="defocusDOFMultiplier">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Maximum scaler by which the dept of focus is deemed to increase from hyperfocal distance to 10-cm"/>
							<xs:attribute name="range" type="xs:string" default="[0,2]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="defocusThresholdScaler">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Scaler by which defocus threshold is multiplied if scene change is not detected"/>
							<xs:attribute name="range" type="xs:string" default="[0,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDPreprocessingType">
		<xs:sequence>
			<xs:element name="enable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Enables selective filtering of PD sample based on confidence level and abs(PD)"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableDoNotUseDefocusSampleByPD">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Enables rejection of PD stat if abs(PD) exceeds this threshold"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableIncMinConfidenceThresholdByPD">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Enables increasing of minimimum confidence level if abs(PD) is above certain threshold"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDMaxLimitDoNotUseDefocusSample">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Minimum threshold applied to abs(PD) above which the corresponding defocus sample is not used"/>
							<xs:attribute name="range" type="xs:string" default="[12,32]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDMaxLimitIncMinConfidenceThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Maximum threshold applied to abs(PD) above which minimum confidence is scaled up"/>
							<xs:attribute name="range" type="xs:string" default="[0,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="incMinConfidenceThresholdByPDScaler">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Scaler multiplier by which minimum confidence threshold is increased if abs(PD) is above PDMaxLimitIncMinConfidenceThreshold"/>
							<xs:attribute name="range" type="xs:string" default="[0,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDStdThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Maximum threshold for std(PD) above which corresponding defocus sample is not used"/>
							<xs:attribute name="range" type="xs:string" default="[0,8]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDDefocusHighErrorScCheck">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If abs(defocus) is above the threshold defined by (PDDefocusHighErrorScCheck * defocus threshold) then focus trigger must also be accompanied by scene change"/>
							<xs:attribute name="range" type="xs:string" default="[2,30]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDAverageDefocusHighErrScCheck">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If temporally filtered abs(defocus) is above the threshold defined by (PDAverageDefocusHighErrScCheck * defocus threshold) focus trigger must also be accompanied by scene change"/>
							<xs:attribute name="range" type="xs:string" default="[2,30]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDLowlightGainThresholdScCheck">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If abs(defocus) is below the threshold defined by (PDLowlightGainThresholdScCheck * defocus threshold) then focus trigger is to be based on scene change"/>
							<xs:attribute name="range" type="xs:string" default="[2,30]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDDefocusHighScCheck" maxOccurs="4">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If abs(defocus) is below the threshold defined by (PDDefocusHighScCheck * defocus threshold) then focus trigger is to be based on scene change"/>
							<xs:attribute name="range" type="xs:string" default="[2,30]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDAverageDefocusHighScCheck" maxOccurs="4">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If temporally filtered abs(defocus) is below the threshold defined by (PDAverageDefocusHighScCheck * defocus threshold) then focus trigger is to be based on scene change"/>
							<xs:attribute name="range" type="xs:string" default="[2,30]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDLowlightDefocusHighScCheck" maxOccurs="4">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If abs(defocus) is below the threshold defined by (PDLowlightDefocusHighScCheck * defocus threshold) then focus trigger is to be based on scene change"/>
							<xs:attribute name="range" type="xs:string" default="[2,30]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDLowlightAverageDefocusHighScCheck" maxOccurs="4">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If temporally filtered abs(defocus) is below the threshold defined by (PDLowlightAverageDefocusHighScCheck * defocus threshold) then focus trigger is to be based on scene change"/>
							<xs:attribute name="range" type="xs:string" default="[2,30]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDInternalType">
		<xs:sequence>
			<xs:element name="type">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="PDAF sensor type used"/>
							<xs:attribute name="range" type="xs:string" default="[1,3]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="initialPosition">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Initial lens position when camera turns on"/>
							<xs:attribute name="range" type="xs:string" default="[0,500]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDAFEnableFaceCAFPriority" >
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Flag to enable feature where contrast-based auto focus is invoked if face is detected"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="incDefocusThresholdPreviousError">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Increase defocus threshold by this parameter in logical lens units if previous iteration of focus converge resulted in error"/>
							<xs:attribute name="range" type="xs:string" default="[0,20]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fineScanRangeEnhance">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="When enabled this feature decreases the estimated fine scan range by 25%"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="softRegionThresholdMultiplier">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Description: If defocus value is less than defocus threshold and above soft defocus threshold, then scene change determines if PDAF focus convergence is to be triggered Constraints: Soft threshold defocus is the calculated by defocusThreshold(tuning) multiplied by softRegionThresholdMultiplier. Decreasing this number may cause PDAF to be more sensitive to defocus condition that is accompanied by a scene change."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableSoftConfidenceThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Description: Enables feature which allow the minimum confidence level to slightly decrease during focus convergence due to increased aliasing Constraints: Enable this feature if PDAF frequently transitions to contrast-based AF in the midst of focus convergence. Generally disabled for Type 1 and enabled for Type 2 and 3"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="softConfidenceThresholdDelta">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Description: Represents the decrease in minimum confidence level allowed during focus convergence if enableSoftConfidenceThreshold is enabled Constraints: Increasing this number allows PDAF to employ lower minimum confidence level during focus converge. Setting this number higher than the minimum confidence level causes minimum confidence level requirement to be omitted during focus converge; hence, a care needs to be taken in revising this parameter."/>
							<xs:attribute name="range" type="xs:string" default="[0,200]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="softConfidenceFocus_pnt">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Description: Represents the scaler by which PDAF focus convergence slows down for PD samples whose confidence level resides between minimum confidence level and (minimum confidence level - softConfidenceThresholdDelta) Constraints: Decreasing this number causes PDAF to perform focus convergence more slowly for PD samples whose confidence level lies between minimum confidence level and (minimum confidence level - softConfidenceThresholdDelta)"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="enableSoftRegionThresholdHigh">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Description: It is a boolean flag which indicate if softdefocusThresholdHigh will be used as a parameter to trigger focus in soft region when soft region threshold hig(enableSoftRegionThresholdHigh) is enabled."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="softRegionThresholdHighMultiplier">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Description: Defocus multiplier to make defocus threshold higher. Please refer to enableSoftRegionThresholdHigh image."/>
							<xs:attribute name="range" type="xs:string" default="[2,6]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="softSceneChangeCount">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Description: number of scene changed reported by AF continues."/>
							<xs:attribute name="range" type="xs:string" default="[1,6]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="cafStableFrameAllow">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable" default="0">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="enable_flag_type">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="flag for caf stable frame allow enable/disable"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="frameCount">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="frame count for caf stable wait threshold"/>
										<xs:attribute name="range" type="xs:string" default="[1,200]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDMultiwindowType">
		<xs:sequence>
			<xs:element name="enable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Enables multi-window auto focus"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="HClipRatioNormalLight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Normalized x coordinate of top-left corner of multi-window ROI under modest to bright light conditions. (x,y) = (0,0) means top-left corner of full field of view."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="VClipRatioNormalLight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Normalized y coordinate of top-left corner of multi-window ROI under modest to bright light conditions. (x,y) = (0,0) means top-left corner of full field of view."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="HClipRatioLowLight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Normalized x coordinate of top-left corner of multi-window ROI under low light conditions. (x,y) = (0,0) means top-left corner of full field of view."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="VClipRatioLowLight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Normalized y coordinate of top-left corner of multi-window ROI under low light conditions. (x,y) = (0,0) means top-left corner of full field of view."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="HNumWindows">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Horizontal grid size of multi-window ROI."/>
							<xs:attribute name="range" type="xs:string" default="[1,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="VNumWindows">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Vertical grid size of multi-window ROI."/>
							<xs:attribute name="range" type="xs:string" default="[1,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PDPercentile">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Pd_percentile Description: Nth Percentile of the valid windows to select from."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="defocusThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Windows within this threshold of the best window will be selected for contrast AF to calcuate FV."/>
							<xs:attribute name="range" type="xs:string" default="[0,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="confidenceThMultiple">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="the confidence threshold for mw grids will be the min-conf * ConfidenceThMultiple."/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="multiDepthDetect">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="percentile">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="after sorting, will use this percentile to get the detect size for multi-depth detection."/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="detectThLow">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="depth difference from multi-depth detection lower than this threshold when in muti-depth mode ,transition to not muti-depth condition."/>
										<xs:attribute name="range" type="xs:string" default="[0,500]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
							<xs:element name="detectThHigh">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="depth difference from multi-depth detection higher than this threshold when in not multi-depth mode , transition to multi-depth condition."/>
										<xs:attribute name="range" type="xs:string" default="[0,500]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="lowLightDetect">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="gainThLow">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="aec gain lower than this threshold when in lowlight mode , transition to normal light MW condition."/>
										<xs:attribute name="range" type="xs:string" default="[0,60]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="gainThHigh">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="aec gain higher than this threshold when in normal light mode , transition to low light MW condition."/>
										<xs:attribute name="range" type="xs:string" default="[0,60]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="lockToPeripheralDuringSearch">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="flag whether to lock the roi to Peripheral during search on the Peripheral"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="activZoomControl">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="enable_flag_type">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="Multi-window PDAF will only enable if zoom level is less than mw_active_zoom_threshold.If zoom level is higher than this threshold, then PDAF will be configured to 1x1 ROI instead to ensure enough pixels located inside. This is flag to enable/disable the mechanism. If this is disabled, then all zoom level will run multi-window PDAF, which may have hunting effect at high zoom level."/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="zoomThreshold">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="Multi-window PDAF will only enable if zoom level is less than this threshold.If zoom level level higher than this threshold, then PDAF will be configured to 1x1 to ensure enough pixels is located inside."/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDFaceControlType">
		<xs:sequence>
			<xs:element name="faceROIProcess">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ROIProcessEnable" type="enable_flag_type" default="0"/>
						<xs:element name="ROIRoughStable" type="chromatixStatsROIDifferenceType"/>
						<xs:element name="ROIStrictStable" type="chromatixStatsROIDifferenceType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="minMoveThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="While running face tracking for 2PD, if defocus is less than this threshold then focus search will not be re-triggered"/>
							<xs:attribute name="range" type="xs:string" default="[0,7]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ROIMoveConvergeSuppress">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="Enable flag for face 2pd ROI move converge suppress"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="stableCountThreshold">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Stable counter threshold for face 2PD roi move converge suppress.Once face ROI is less than moving threshold for continuous frames over the counter PDAF will resume converging"/>
										<xs:attribute name="range" type="xs:string" default="[1,100]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="moveThresholdInX">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="Face tracking 2PD, if ROI is moving over defined X threshold, then converge suppress will occur"/>
										<xs:attribute name="range" type="xs:string" default="[0.1,1.0]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="moveThresholdInY">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="Face tracking 2PD, if ROI is moving over defined Y threshold, then converge suppress will occur"/>
										<xs:attribute name="range" type="xs:string" default="[0.1,1.0]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="defocusFilter">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="Face tracking 2PD, temporal filter to calculate average target position and use target positon to calculate average defocus and next position"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="length">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Face tracking 2PD, length of moving average filter applied to target lens position"/>
										<xs:attribute name="range" type="xs:string" default="[1,10]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="confidenceHighThreshold">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Face tracking 2PD, if confidence is above this threshold then lens is moved to 100% of defocus. If confidence is lower than min_conf the lens is not moved. If confidence is between this threshold and min_conf then the lens is moved by interpolated percentage"/>
										<xs:attribute name="range" type="xs:string" default="[0,1023]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="fallback">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="Face tracking 2PD is always in converge state. This flag is used to enable fallback in some specification condition. If face fallback condition is met and this flag is enable then fallback to contrast-based AF is invoked"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="fallbackROISizeThreshold">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Face tracking 2PD, enter fallback status if one of ROI dimension is small than this threshold"/>
										<xs:attribute name="range" type="xs:string" default="[0,4032]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="faceChangeRefocusTrigger">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="Enable face PDAF face change refocus trigger. When face change criteria is satisfied then scene change flag will be raised and PDAF refocus will be triggered."/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="roiChangeThreshPercentage">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="When face ROI vs. reference ROI has moved more than thresh percentage, face refocus will trigger. Percentage is calculated by face ROI move delta divide by CAMIF width or height."/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="roiSizeStableThresh">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="When current face ROI vs. last frame face ROI moves less than this pixel threshold, we report face regains stability. This is not a percentage."/>
										<xs:attribute name="range" type="xs:string" default="[0,100]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDTouchControlType">
		<xs:sequence>
			<xs:element name="offCenterThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Radius distance from touch ROI to center ROI in terms of dist divided by CAMIF radius. This value is a percentage of camif radius. Image center PD perforamnce is better than corner. When defocus is large enough, corner image PD may not accurate enough and hit over-shoot situation. This threshold to divide FOV to two zone: center/corner. If corner zone defocus is large lens is moved incrementally"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="skipSearchIfSceneInFocus">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="flag to enable PDAF skip refocus if scene is already in focus."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDTrackControlType">
		<xs:sequence>
			<xs:element name="trackROIProcess">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="trackROIRoughStable" type="chromatixStatsROIDifferenceType"/>
						<xs:element name="trackROIStrictStable" type="chromatixStatsROIDifferenceType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="minMoveThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="While running object tracking for 2PD, if defocus is less than this threshold then focus search will not be re-triggered"/>
							<xs:attribute name="range" type="xs:string" default="[0,7]"/>
							<xs:attribute name="default_value" type="xs:unsignedInt" default="3"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="defocusFilter">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="object tracking 2PD, temporal filter to calculate average target position and use target positon to calculate average defocus and next position"/>
										<xs:attribute name="default_value" type="xs:boolean" default="true"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="length">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="object tracking 2PD, length of moving average filter applied to target lens position"/>
										<xs:attribute name="range" type="xs:string" default="[1,10]"/>
										<xs:attribute name="default_value" type="xs:unsignedInt" default="3"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="confidenceHighThreshold">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="object tracking 2PD, if confidence is above this threshold then lens is moved to 100% of defocus. If confidence is lower than min_conf the lens is not moved. If confidence is between this threshold and min_conf then the lens is moved by interpolated percentage"/>
										<xs:attribute name="range" type="xs:string" default="[0,1023]"/>
										<xs:attribute name="default_value" type="xs:unsignedInt" default="700"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="fallback">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="object tracking 2PD is always in converge state. This flag is used to enable fallback in some specification condition. If object fallback condition is met and this flag is enable then fallback to contrast-based AF is invoked"/>
										<xs:attribute name="default_value" type="xs:boolean" default="false"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="fallbackROISizeThreshold">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="object tracking 2PD, enter fallback status if one of ROI dimension is small than this threshold"/>
										<xs:attribute name="range" type="xs:string" default="[0,4032]"/>
										<xs:attribute name="default_value" type="xs:unsignedInt" default="200"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromaitxPDConvergeDoneFilterType">
		<xs:sequence>
			<xs:element name="enable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" type="xs:string" default="Flag to enable temproal filter applied to target lens position during focus converge"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="length">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Length of moving average filter applied to target lens position during focus converge"/>
							<xs:attribute name="range" type="xs:string" default="[1,5]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="threshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Threshold used to assess focus done condition. If the difference between target lens position and the next lens position is less then this threshold then focus convergence is done"/>
							<xs:attribute name="range" type="xs:string" default="[1,900]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixPDForceEnterFineSearchType">
		<xs:sequence>
			<xs:element name="enable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" type="xs:string" default="Force enabling or disabling of contrast-based fine scan"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="directionReverseCountThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="TODO_DESCRIPTION"/>
							<xs:attribute name="range" type="xs:string" default="[0,10]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAdvancedSparsePDControlType">
		<xs:sequence>
			<xs:element name="enableForSparsePD">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" type="xs:string" default="Flag to control if apply Advanced Sparse PD search algorithm for normal sparse PD (not advanced sparse PD) input, if this flag is enabled, will use high confidence table as threshold to control when feature kickin" />
							<xs:attribute name="default_value" type="xs:boolean" default="false" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="skipFineScan">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Skip contrast-based fine scan following PDAF focus convergence"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="focusDoneThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Minimum absolute defocus value below which focus converge is deemed to be done"/>
							<xs:attribute name="range" type="xs:string" default="[0,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="focusTable" type="chromatixPDFocusTableType"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
