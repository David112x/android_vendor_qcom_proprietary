<?xml version="1.0" encoding="UTF-8"?>
<!--========================================================================-->
<!-- Copyright (c) 2016-2019 Qualcomm Technologies, Inc.                    -->
<!-- All Rights Reserved.                                                   -->
<!-- Confidential and Proprietary - Qualcomm Technologies, Inc.             -->
<!--========================================================================-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="afglobalelements.xsd"/>
	<xs:include schemaLocation="..\common\statsroipriority.xsd"/>
	<xs:element name="chromatixAFAlgoTuning" type="chromatixAFAlgoTuningType"/>
	<xs:complexType name="chromatixAFAlgoTuningType">
		<xs:sequence>
			<xs:element name="module_version">
				<xs:complexType>
					<xs:attribute name="major_revision" type="xs:int" fixed="9"/>
					<xs:attribute name="minor_revision" type="xs:int" fixed="0"/>
					<xs:attribute name="incr_revision" type="xs:int" fixed="0"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="parameter_version">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="revision" type="xs:string" default="A"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="commonElements" type="chromatixAFCommonType"/>
			<xs:element name="FOVCorrection" type="chromatixFOVCorrection"/>
			<xs:element name="searchLimit" type="chromatixFocusModeSearchLimitType" maxOccurs="5"/>
			<xs:element name="faceDetection" type="chromatixFaceDetectionTuningType"/>
			<xs:element name="statsROIProcess">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ROIProcessEnable" type="enable_flag_type" default="0"/>
						<xs:element name="statsROIPriority" type="chromatixStatsROIPriorityType"/>
						<xs:element name="trackROIPriority" type="chromatixStatsROIPriorityType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="orientationDetection" type="chromatixAFOrientationDetectionReserveType"/>
			<xs:element name="outdoorROIConfiguration" type="chromatixAFOutdoorConfigurationReserveType"/>
			<xs:element name="moduleTuning" type="chromatixModuleTuningReserveType"/>
			<xs:element name="setInvalidFrame">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Determines whether the stats of the first frame will be skipped or not."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="handJitter">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AFSingle">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="enable">
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:boolean">
													<xs:attribute name="type" default="bool"/>
													<xs:attribute name="description" type="xs:string" default="Enable/Disable Hand jitter function in single AF algorithm"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="maxFVInBeginning">
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
													<xs:attribute name="type" default="float"/>
													<xs:attribute name="description" type="xs:string" default="Check is max fv in first frame"/>
													<xs:attribute name="range" type="xs:string" default="[0,1]"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="coarseSearch">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="minSampleSize">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:unsignedInt">
																<xs:attribute name="type" default="uint"/>
																<xs:attribute name="description" type="xs:string" default="Minimum stats number for LSP curve fitting calculation during coarse search"/>
																<xs:attribute name="range" type="xs:string" default="[1,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="currentGyroscopeThreshold">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of average gyro square value during coarse search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="currentGyroscopeSTDThreshold">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of the STD of gyro square value during coarse search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="gyroscopeThresholdForDifferenceRatio">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of gyro square value need to calculate gyro ratio during coarse search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="gyroscodeDifferenceRatioThreshold">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of gyro difference ratio during fine search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="fineSearch">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="minSampleSize">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:unsignedInt">
																<xs:attribute name="type" default="uint"/>
																<xs:attribute name="description" type="xs:string" default="Minimum stats number for LSP curve fitting calculation during fine search"/>
																<xs:attribute name="range" type="xs:string" default="[1,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="currentGyroscopeThreshold">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of average gyro square value during coarse search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="currentGyroscopeSTDThreshold">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of the STD of gyro square value during coarse search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="gyroscopeThresholdForDifferenceRatio">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of gyro square value need to calculate gyro ratio during coarse search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="gyroscodeDifferenceRatioThreshold">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of gyro difference ratio during fine search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="FVNormalized">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="enable">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:boolean">
																			<xs:attribute name="type" default="bool"/>
																			<xs:attribute name="description" type="xs:string" default="Turn on HJ filter process during fine search"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
															<xs:element name="highGyroscopeDifferenceThreshold">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:float">
																			<xs:attribute name="type" default="float"/>
																			<xs:attribute name="description" type="xs:string" default="Highest threshold of gyro difference of HJ filter process"/>
																			<xs:attribute name="range" type="xs:string" default="[0,10]"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
															<xs:element name="lowGyroscopeDifferenceThreshold">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:float">
																			<xs:attribute name="type" default="float"/>
																			<xs:attribute name="description" type="xs:string" default="Lowest threshold of gyro difference of HJ filter process"/>
																			<xs:attribute name="range" type="xs:string" default="[0,10]"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
															<xs:element name="highGryoscopeFVWeight">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:float">
																			<xs:attribute name="type" default="float"/>
																			<xs:attribute name="description" type="xs:string" default="Focus value weight when gyro difference is above AF_LSP_HJ_High_Gyro_Diff_Thrs"/>
																			<xs:attribute name="range" type="xs:string" default="[0,1]"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
															<xs:element name="weightType">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:unsignedInt">
																			<xs:attribute name="type" default="uint"/>
																			<xs:attribute name="description" type="xs:string" default="choose how to decide FV weight in filter process. 0 use gyro to decide weight. 1 use gyro_diff to decide weight"/>
																			<xs:attribute name="range" type="xs:string" default="[0,1]"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="redoRateThreshold">
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
													<xs:attribute name="type" default="float"/>
													<xs:attribute name="description" type="xs:string" default="Percentage ratio to retrigger AF search (HJ stats number/ All stats number)"/>
													<xs:attribute name="range" type="xs:string" default="[0,1]"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="handleNeedCount">
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:unsignedInt">
													<xs:attribute name="type" default="uint"/>
													<xs:attribute name="description" type="xs:string" default="Minimum HJ stats count threshold to trigger HJ algorithm"/>
													<xs:attribute name="range" type="xs:string" default="[0,10]"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="resetDataBeforeFineSearch">
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:boolean">
													<xs:attribute name="type" default="bool"/>
													<xs:attribute name="description" type="xs:string" default="Turn on Stats reset function before enter fine search"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="workingExposureIndex">
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:unsignedInt">
													<xs:attribute name="type" default="uint"/>
													<xs:attribute name="description" type="xs:string" default="Minimum exposure index requirement to enter HJ algorithm"/>
													<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="HAFFineSearch">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="enable">
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:boolean">
													<xs:attribute name="type" default="bool"/>
													<xs:attribute name="description" type="xs:string" default="enable/disable Hand Jitter function in HAF fine search"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="fineSearch">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="minSampleSize">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:unsignedInt">
																<xs:attribute name="type" default="uint"/>
																<xs:attribute name="description" type="xs:string" default="Minimum stats number for LSP curve fitting calculation during HAF fine search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="currentGyroscopeThreshold">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of average gyro square value during HAF fine search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="currentGyroscopeSTDThreshold">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of the STD of gyro square value during HAF fine search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="gyroscopeThresholdForDifferenceRatio">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of gyro square value need to calculate gyro ratio during HAF search"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="gyroscodeDifferenceRatioThreshold">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:float">
																<xs:attribute name="type" default="float"/>
																<xs:attribute name="description" type="xs:string" default="Minimum HJ stats count threshold to trigger HJ algorithm"/>
																<xs:attribute name="range" type="xs:string" default="[0,10]"/>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
												<xs:element name="FVNormalized">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="enable">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:boolean">
																			<xs:attribute name="type" default="bool"/>
																			<xs:attribute name="description" type="xs:string" default="Enable/Disable HJ filter process during fine search"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
															<xs:element name="highGyroscopeDifferenceThreshold">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:float">
																			<xs:attribute name="type" default="float"/>
																			<xs:attribute name="description" type="xs:string" default="Highest threshold of gyro difference of HJ filter process"/>
																			<xs:attribute name="range" type="xs:string" default="[0,10]"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
															<xs:element name="lowGyroscopeDifferenceThreshold">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:float">
																			<xs:attribute name="type" default="float"/>
																			<xs:attribute name="description" type="xs:string" default="Lowest threshold of gyro difference of HJ filter process"/>
																			<xs:attribute name="range" type="xs:string" default="[0,10]"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
															<xs:element name="highGryoscopeFVWeight">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:float">
																			<xs:attribute name="type" default="float"/>
																			<xs:attribute name="description" type="xs:string" default="Focus value weight when gyro difference is above HAF_LSP_HJ_High_Gyro_Diff_Thrs"/>
																			<xs:attribute name="range" type="xs:string" default="[0,1]"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
															<xs:element name="weightType">
																<xs:complexType>
																	<xs:simpleContent>
																		<xs:extension base="xs:unsignedInt">
																			<xs:attribute name="type" default="uint"/>
																			<xs:attribute name="description" type="xs:string" default="choose how to decide FV weight in filter process. 0 use gyro to decide weight. 1 use gyro_diff to decide weight"/>
																			<xs:attribute name="range" type="xs:string" default="[0,1]"/>
																		</xs:extension>
																	</xs:simpleContent>
																</xs:complexType>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="handleNeedCount">
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:unsignedInt">
													<xs:attribute name="type" default="uint"/>
													<xs:attribute name="description" type="xs:string" default="Minimum HJ threshold of gyro difference ratio during HAF fine search"/>
													<xs:attribute name="range" type="xs:string" default="[0,10]"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="workingExposureIndex">
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:unsignedInt">
													<xs:attribute name="type" default="uint"/>
													<xs:attribute name="description" type="xs:string" default="Minimum exposure index requirement to enter HJ algorithm"/>
													<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="samplingRate">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Hand jitter need higher sample Gryo sample rate. This value specified how much is Gyro sample rate when Hand Jitter function enable"/>
										<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="reportingRate">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Hand jitter need higher sample Gryo sample rate. This value specified how much is Gyro report rate when Hand Jitter function enable"/>
										<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="spotlightDetection">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="Enable/Disable spotlight detection in AF function"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="statsType">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:int">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="Range: [0 or 1] 0 - 16x16 YSum stats 1 - 64x48 BG stats; Description: This flag determines spotlight detection algorithm stats type. When value is 0, it runs with default 16x16 YSum stats. If the value is 1, then SPD will run with 64x48 BG stats which provides finer granularity. Constraints: None"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="bgStatsThreshAutoConvertEnable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="enable_flag_type">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="When enable, all the YSum spotlight tuning thresholds will be auto converted to BG stats compatible thresholds. For example, if spotlight tuning thresholds are start_h = 4 and end_h = 12, then with BG auto convert, it will directly runtime change thresholds to start_h = 16 and en_h = 48(By multiplying the BG/YSum grid ratio). If it is disabled, then the grids will be use as it is, and no auto-convert will happen."/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="bgStatsBrightRegionSatRatioThresh">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="While running BG stats spotlight detection, if any bright region detection zone grid has saturation ratio higher than this threshold, then the grid will be count as a bright region."/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="far_flat_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="flat_threshold for far scene when detecting spotlight condition"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="marco_flat_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="flat_threshold for marco scene when detecting spotlight condition"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="inc_flat_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="inc_flat_threshold to judge current af position is in increase or flat condition"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="dec_flat_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="dec_flat_threshold to judge current af position is in decrease or flat condition"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="spotlight_zone_start_h">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the horizontal start region of spotlight zone in 16x16 total regions"/>
										<xs:attribute name="range" type="xs:string" default="[0,15]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="spotlight_zone_end_h">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the horizontal end region of spotlight zone in 16x16 total regions, the spotlight zone horizontal end region = spotlight_zone_end_h - 1"/>
										<xs:attribute name="range" type="xs:string" default="[1,16]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="spotlight_zone_start_v">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the vertical start region of spotlight zone in 16x16 total regions"/>
										<xs:attribute name="range" type="xs:string" default="[0,15]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="spotlight_zone_end_v">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the vertical end region of spotlight zone in 16x16 total regions, the spotlight zone vertical end region = spotlight_zone_end_v - 1"/>
										<xs:attribute name="range" type="xs:string" default="[1,16]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="background_zone_start_h">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the horizontal start region of background zone in 16x16 total regions"/>
										<xs:attribute name="range" type="xs:string" default="[0,15]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="background_zone_end_h">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the horizontal end region of background zone in 16x16 total regions, the background zone horizontal end region = background_zone_end_h - 1"/>
										<xs:attribute name="range" type="xs:string" default="[1,16]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="background_zone_start_v">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the vertical start region of background zone in 16x16 total regions"/>
										<xs:attribute name="range" type="xs:string" default="[0,15]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="background_zone_end_v">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the vertical end region of background zone in 16x16 total regions, the background zone vertical end region = background_zone_end_v - 1"/>
										<xs:attribute name="range" type="xs:string" default="[1,16]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="exposure_index_trigger_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:int">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="if exposure index is smaller than this threshold, the spotlight will not be detected"/>
										<xs:attribute name="range" type="xs:string" default="[200,400]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="background_luma_avg_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="If the average luma of background zone is higher than this threshold, the spotlight will not be detected"/>
										<xs:attribute name="range" type="xs:string" default="[1,255]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="region_low_grey_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the low grey luma threshold. If luma is smaller than this threshold, it will be recognized as a low grey region, suggest to disable it by default value 255"/>
										<xs:attribute name="range" type="xs:string" default="[1,255]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="region_low_dark_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Defines the dark grey luma threshold. If luma is smaller than this threshold, it will be recognized as a dark grey region, good to keep default value"/>
										<xs:attribute name="range" type="xs:string" default="[1,255]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="background_low_grey_pct_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="if the low grey percentage is higher than this threshold, the low grey flag will be raised. Suggest to disable it by default"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="background_dark_grey_pct_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="if the dark grey percentage is higher than this threshold, the dark grey flag will be raised"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="bright_region_luma_delta_background_zone">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="if regions luma is higher than average luma of background zone multiply this parameter, this region will be recognize as a bright region"/>
										<xs:attribute name="range" type="xs:string" default="[0,8]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="bright_region_luma_delta_spotlight_zone_low_grey">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="In low grey condition and cluster is enabled,if regions luma is higher than average luma of background zone multiply. This parameter, this region will be recognize as a bright region"/>
										<xs:attribute name="range" type="xs:string" default="[0,8]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="bright_region_luma_delta_spotlight_zone_dark_grey">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="In dark grey condition and cluster is enabled,if regions luma is higher than average luma of background zone multiply. This parameter, this region will be recognize as a bright region"/>
										<xs:attribute name="range" type="xs:string" default="[0,8]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="square_cluster_inc_size">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="The maximum bright region will be the center region and the square cluster size will depends on the parameter, set to 0 will disable this cluster effect"/>
										<xs:attribute name="range" type="xs:string" default="[0,2]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="vertical_cluster_inc_size">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="The maximum bright region will be the center region and the vertical cluster size will depends on the parameter, set to 0 will disable this cluster effect"/>
										<xs:attribute name="range" type="xs:string" default="[0,2]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="horizontal_cluster_inc_size">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="The maximum bright region will be the center region and the vertical cluster size will depends on the parameter, set to 0 will disable this cluster effect"/>
										<xs:attribute name="range" type="xs:string" default="[0,2]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="square_cluster_pct_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="If the bright region percentage of square cluster zones is higher this threshold, the flag of square_bright_region_cluster will be raised"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="vertical_cluster_pct_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="If the bright region percentage of vertical cluster zones is higher this threshold, the flag of vertical_bright_region_cluster will be raised"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="horizontal_cluster_pct_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="If the bright region percentage of horizontal cluster zones is higher this threshold, the flag of horizontal_bright_region_cluster will be raised"/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="spotlight_detect_cnt_th">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:unsignedInt">
										<xs:attribute name="type" default="uint"/>
										<xs:attribute name="description" type="xs:string" default="Spotlight detect flag threshold. Only if consecutive success spotlight detect over the threshold count will result in the final spotlight detected flag be updated."/>
										<xs:attribute name="range" type="xs:string" default="[1,unbounded]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="distanceMapControl" type="chromatixAFDistancemapControlType"/>
			<xs:element name="focusMapControl" type="chromatixAFFocusMapControlType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixFOVCorrection">
		<xs:sequence>
			<xs:element name="enable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Enable/Disable FOV compenstation function in AF side."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fudgeFactor">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Compensation factor inorder to get the right crop factor"/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="anchorLensPosition1">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Lens position corresponding to the anchor_distance_mm_1 Need to specify the lens position, can refer to Contrast AF tuning settings from single_index_t"/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="anchorLensPosition2">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Lens position corresponding to the anchor_distance_mm_2 Need to specify the lens position, can refer to Contrast AF tuning settings from single_index_t"/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="anchorDistanceMM1">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Physical distance in millimeters at which anchor_lens_pos1 corresponds to."/>
							<xs:attribute name="range" type="xs:string" default="[0,3000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="anchorDistanceMM2">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Physical distance in millimeters at which anchor_lens_pos2 corresponds to."/>
							<xs:attribute name="range" type="xs:string" default="[0,3000]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="focusConvergeStepSizeBrightLight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Step size for focus converge in bright light"/>
							<xs:attribute name="range" type="xs:string" default="[0,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fineSearchStepSizeBrightLight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Step size for fine search in bright light"/>
							<xs:attribute name="range" type="xs:string" default="[0,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="focusConvergeStepSizeLowLight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Step size for focus converge in low light"/>
							<xs:attribute name="range" type="xs:string" default="[0,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fineSearchStepSizeLowLight">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Step size for fine search in low light"/>
							<xs:attribute name="range" type="xs:string" default="[0,50]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFCommonType">
		<xs:sequence>
			<xs:element name="positionNearEnd">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Nearest position lens can move to."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="positionDefaultInMacro">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Default lens rest position when focus mode is Macro."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="positionBoundary">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Determines near end of search range for Normal focus mode."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="positionDefaultInNormal">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Default lens reset position when focus mode is other than macro."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="positionFarEnd">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Farthest point of the search range."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="positionNormalHyperfocal">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Normal position of the lens when focus fails."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="positionMacroRegion">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Starting lens position of macro region."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="lowLightGainThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="When the AEC gain is above this threshold, we assume it's low light condition."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixFocusModeSearchLimitType">
		<xs:sequence>
			<xs:element name="enable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Determines whether the stats of the first frame will be skipped or not."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="nearEnd">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Nearest position lens can move to in this mode"/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="farEnd">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Farest position lens can move to in this mode"/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="defaultPosition">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Default lens reset position in current focus mode."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixFDPriorityCAF">
		<xs:sequence>
			<xs:element name="positionChangeThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Controls when to reconfigure ROI when position has changed with respect to last stable ROI."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="positionStableThresholdHigh">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Percentage difference between last and current position above this value indicates face is moving and not stable to trigger new search."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="positionStableThresholdLow">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Position is deemed stable only after face position change is less than this threshold."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="sizeChangeThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Threshold to check if size change has decreased enough to be considered stable."/>
							<xs:attribute name="range" type="xs:string" default="[0,100]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="oldNewSizeDifferenceThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Percentage difference between last biggest face and current biggest face to check if we should start focusing on new face."/>
							<xs:attribute name="range" type="xs:string" default="[0,100]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="stableCountSize">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames face size should remain stable to trigger new search."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="stableCountPosition">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames face position should remain stable to trigger new search."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="noFaceWaitThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Number of frames to wait to reset default ROI once face disappears."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fpsAdjustmentThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="If current fps falls below this threshold we'll adjust stability counts."/>
							<xs:attribute name="range" type="xs:string" default="[0,1024]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFFaceROIExtensionReserveType">
		<xs:sequence>
			<xs:element name="ROIFaceExtensionEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="a switch to turn on face ROI extension which extend ROI region from face detection region and gravity information to include hair region and neck region to avoid flat focus value. Constraints: enable to include hair region, but may including some background region."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ROIFaceScaleX">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Face ROI width will be (1+scale) times of width of face detection region.Constraints: set too large will include background region. Should not set too high due to no face region in extra horizontal region."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ROIFaceScaleY">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Face ROI height will be (1+scale) times of height of face detection region. Constraints: this parameter enlarge vertical ROI region from face detection region and include hair region and neck region. It will avoid flat focus region when face is too smooth."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ROIFaceSymmetricX">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="decide how face ROI extend to left/right side. Value 0.5 means symmetric extension. 0 means extend to left. 1 means extend to right."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ROIFaceSymmetricY">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="decide how face ROI extend to up/down side. Value 0.5 means symmetric extension. 1 means extend to upside. 0 means extend to downside."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFFaceDetectionROITuningReserveType">
		<xs:sequence>
			<xs:element name="FDROITune">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="In some cases, FD ROI includes non-face area, such as it's located backward from the face. This causes AF is focusing to the backward high frequency area instead of face area and it causes blurred face shot. It makes ROI be downsized. It can be solved with multi grid ROI, but some target doesn't provide it. In such case, it's worth."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="FDROIRatio">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It provides FD ROI Ratio from chromatix with AFChromatix_EN_FDROITune. Please check with AFChromatixFDROITune."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixFaceDetectionTuningType">
		<xs:sequence>
			<xs:element name="faceDetectionPriority" type="chromatixFDPriorityCAF"/>
			<xs:element name="faceROIExtension" type="chromatixAFFaceROIExtensionReserveType"/>
			<xs:element name="faceDetectionROITuning" type="chromatixAFFaceDetectionROITuningReserveType"/>
			<xs:element name="faceDetection" type="chromatixAFFaceDetectionReserveType"/>
			<xs:element name="faceHVWeight">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:boolean">
										<xs:attribute name="type" default="bool"/>
										<xs:attribute name="description" type="xs:string" default="flag to decide whether we should use difference weight for H and V FV value. "/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="hWeight">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute name="type" default="float"/>
										<xs:attribute name="description" type="xs:string" default="Focus value will be hWeight*H+(1-hWeight)*V for face case."/>
										<xs:attribute name="range" type="xs:string" default="[0,1]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="faceFarEnd">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="enable">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="enable_flag_type">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="when enable , new far end will be used for face fine search."/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="farEnd">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:int">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="this value will be updated as the new lens far end when fine search happened for face ROI. "/>
										<xs:attribute name="range" type="xs:string" default="[0,1000]"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFFaceDetectionReserveType">
		<xs:sequence>
			<xs:element name="robustFaceDetectEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="1 will enable robust fd af feature and 0 will disable it. This feature is required to make existing FD based CAF more robust and reduce hunting in some problematic scene. Below 4 param are related to it."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="nofaceCountThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="number of frame threshold after that we wont delay fd based trigger even if scene is not changed. Normally keep it very high value like 30sec-1min, (frames as per 30fps, we internally adjust for fps change)"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="stableCountThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="number of frame threshold to wait when fd report face detected but scene is not changed and roi size is similar to prev. normally it should be around 3-4sec. (frames as per 30fps, we internally adjust for fps change)"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="faceDetectionROIPositionChangeThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="Percentage of coordinate change from previous reported roi, Used to minimize CAF trigger when fd report coordinate very similar. Should be around 5-15%"/>
							<xs:attribute name="range" type="xs:string" default="[0,100]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="faceLostTriggerEnable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="This is optional feature to enable logic where we trigger caf when face lost reported from fd even if scene is not changed, This is useful for corcer-face case but this doesn't go well with robust fd logic, so should be enabled with robust only with proper tuning of thresholds."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="faceLostStableThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="number of frame threshold to wait for no face frame after reporting face lost from fd before we trigger caf if faceLostTriggerEnable enabled. Value should be around 1-5sec."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFOrientationDetectionReserveType">
		<xs:sequence>
			<xs:element name="gravityXLandscapeThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="a gravity x-axis threshold to determine is device orientation in landscape mode."/>
							<xs:attribute name="range" type="xs:string" default="[0,9.8]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="gravityYLandscapeThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="a gravity y-axis threshold to determine is device orientation in landscape mode."/>
							<xs:attribute name="range" type="xs:string" default="[0,9.8]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="gravityXPortraitThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="a gravity x-axis threshold to determine is device orientation in portrait mode."/>
							<xs:attribute name="range" type="xs:string" default="[0,9.8]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="gravityYPortraitThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="a gravity y-axis threshold to determine is device orientation in portrait mode."/>
							<xs:attribute name="range" type="xs:string" default="[0,9.8]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFOutdoorConfigurationReserveType">
		<xs:sequence>
			<xs:element name="EnableOutdoorROITune">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="It enhances AF performance in bright spot with low contrast of indoor. Finally, it makes outdoor ROI be configured or downsized. We can have situation which indoor and outdoor ROI should be compromised simultaneously. This is the case: Outdoor ROI should be downsized because we change the ROI for not letting bright spot with low contrast in ROI."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="OutdoorROIRatioX">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It provides Outdoor ROI x Ratio from chromatix. Please check with AFChromatix_ENOutdoorROITune."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="OutdoorROIRatioY">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="It provides Outdoor ROI y Ratio from chromatix. Please check with AFChromatix_ENOutdoorROITune."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixSagCompensation">
		<xs:sequence>
			<xs:element name="enable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="Enable/Disable lens sag compensation."/>
							<xs:attribute name="range" type="xs:string" default="[0,1]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fDAC" maxOccurs="3">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:unsignedInt">
							<xs:attribute name="type" default="uint"/>
							<xs:attribute name="description" type="xs:string" default="fDAC"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fDistance">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="fDistance"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="triggerThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="triggerThreshold"/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixModuleTuningReserveType">
		<xs:sequence>
			<xs:element name="lensSagCompensation" type="chromatixSagCompensation"/>
			<xs:element name="enableHysteresisOffset">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="enable_flag_type">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="It enables/disables Hysteresis compensation by provided offset. If Peak is found by only coarse search, shift-offset for compensating hysteresis is needed in case of open loop type, especially far area."/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="chromatixHysteresisOffset">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="Max depending on tuning circumstance. It's the offset value of hysteresis compensation. Please check with AFChromatixEnableHysteresisOffset."/>
							<xs:attribute name="range" type="xs:string" default="[0,unbounded]"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFDistancemapControlType">
		<xs:sequence>
			<xs:element name="useOTPData">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
								<xs:attribute name="type" default="bool"/>
								<xs:attribute name="description" type="xs:string" default="if this flag is true, the mapping between lens position and distance will use the data from OTP, otherwise, will use the single AF lens table"/>
								<xs:attribute name="default_value" type="xs:boolean" default="false"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="chromatixAFFocusMapControlType">
		<xs:sequence>
			<xs:element name="enable">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="type" default="bool"/>
							<xs:attribute name="description" default="flag to control enable/disable AF generate focus map"/>
							<xs:attribute name="default_value" default="false" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="resolution">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="width">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:int">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="define the output focus map width"/>
										<xs:attribute name="range" type="xs:string" default="[1, 240]" />
										<xs:attribute name="default_value" default="20" />
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="height">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:int">
										<xs:attribute name="type" default="int"/>
										<xs:attribute name="description" type="xs:string" default="define the output focus map height"/>
										<xs:attribute name="range" type="xs:string" default="[1, 180]" />
										<xs:attribute name="default_value" default="20" />
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="description" type="xs:string" default="define the output resolution of the focus map"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="defocusTable">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="triggerMode">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:pattern value="AECGain"/>
									<xs:pattern value="AECLuxIndex"/>
									<xs:pattern value="LensPosition"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="triggerEntries" type="FocusMapDefocusEntryType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="confidenceTable">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="triggerMode">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:pattern value="AECGain"/>
									<xs:pattern value="AECLuxIndex"/>
									<xs:pattern value="LensPosition"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="triggerEntries" type="FocusMapConfidenceEntryType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FocusMapDefocusEntryType">
		<xs:sequence>
			<xs:element name="triggerPoint">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="trigger points"/>
							<xs:attribute name="range" type="xs:string" default="[0, unbounded]"/>
							<xs:attribute name="default_value" default="0.0"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="defocusThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="defocus threshold"/>
							<xs:attribute name="range" type="xs:string" default="[0, 399]"/>
							<xs:attribute name="default_value" default="10"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FocusMapConfidenceEntryType">
		<xs:sequence>
			<xs:element name="triggerPoint">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute name="type" default="float"/>
							<xs:attribute name="description" type="xs:string" default="trigger points"/>
							<xs:attribute name="range" type="xs:string" default="[0, unbounded]"/>
							<xs:attribute name="default_value" default="0.0"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="confidenceThreshold">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="type" default="int"/>
							<xs:attribute name="description" type="xs:string" default="defocus threshold"/>
							<xs:attribute name="range" type="xs:string" default="[0, 100]"/>
							<xs:attribute name="default_value" default="50"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="chromatixAFFocusModeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AFFocusModeAuto"/>
			<xs:enumeration value="AFFocusModeContinuous"/>
			<xs:enumeration value="AFFocusModeInfinity"/>
			<xs:enumeration value="AFFocusModeMacro"/>
			<xs:enumeration value="AFFocusModeManual"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
