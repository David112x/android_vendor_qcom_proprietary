<?xml version="1.0" encoding="utf-8" ?>
<!--
========================================================================
   Copyright(c) 2019 Qualcomm Technologies, Inc.
   All Rights Reserved.
   Confidential and Proprietary - Qualcomm Technologies, Inc.
========================================================================
-->
<Tracker
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="..\..\xsd\stats\aec\aecTracker.xsd">
  <module_version major_revision="8" minor_revision="0" incr_revision="0"/>
  <parameter_version> <revision>A</revision> </parameter_version>
  <trackerMtr>
    <enableTrackerROI description="Enable Flag for Tracker ROI AEC Adjustments" tuning_parameter_level="often_tune">true</enableTrackerROI>
    <weightTemporalFilter description="Temporal weight for Tracker Luma and Metered luma transition. Higher weight will have faster transition to Tracker Luma" range="[0,1]" tuning_parameter_level="never_tune">0</weightTemporalFilter>
    <centerWeightStrength description="Specify weighting of luma in the center of Tracker ROI" range="[0,1]" tuning_parameter_level="rarely_tune">1</centerWeightStrength>
    <enableLuxTrackerTarget description="Enable Flag for for adjusting luma target based on lux index" tuning_parameter_level="rarely_tune">false</enableLuxTrackerTarget>
    <luxTrackerLumaTarget description="Luma target tuning structure, which is shared between normal and flash use case.">
      <luxLumaTargetZone>
        <zoneTrigger description="lux level start and end values that define trigger region">
          <start>0</start>
          <end>0</end>
        </zoneTrigger>
        <zoneData description="Triggered data: Tracker Luma targets that will be adjusted based on lux level">
          <lumaTarget description="Luma target value for each zone with 8 bit range." range="[0,255]" tuning_parameter_level="often_tune">0</lumaTarget>
        </zoneData>
      </luxLumaTargetZone>
      <luxLumaTargetZone>
        <zoneTrigger description="lux level start and end values that define trigger region">
          <start>0</start>
          <end>0</end>
        </zoneTrigger>
        <zoneData description="Triggered data: Luma targets that will be adjusted based on lux level">
          <lumaTarget description="Luma target value for each zone with 8 bit range." range="[0,255]" tuning_parameter_level="often_tune">0</lumaTarget>
        </zoneData>
      </luxLumaTargetZone>
      <luxLumaTargetZone>
        <zoneTrigger description="lux level start and end values that define trigger region">
          <start>0</start>
          <end>0</end>
        </zoneTrigger>
        <zoneData description="Triggered data: Luma targets that will be adjusted based on lux level">
          <lumaTarget description="Luma target value for each zone with 8 bit range." range="[0,255]" tuning_parameter_level="often_tune">0</lumaTarget>
        </zoneData>
      </luxLumaTargetZone>
    </luxTrackerLumaTarget>
    <statsUpdateDelayTimeEnter description="Specify the delay in time to declare official Tracker ROI, for detection Stability" range="[0,10]" tuning_parameter_level="rarely_tune">0.3</statsUpdateDelayTimeEnter>
    <statsUpdateDelayTimeExit description="Specify the delay in time to declare official Tracker ROI, for detection Stability" range="[0,10]" tuning_parameter_level="rarely_tune">0</statsUpdateDelayTimeExit>
    <!--

Base Type Tuning Definition

 -->
    <trackerWeight description="Min and Max tracker luma weight wrt tracker size." tuning_parameter_level="never_tune">
      <start>0.2</start>
      <end>0.9</end>
    </trackerWeight>
    <trackerLumaWeightLuxIndexTrigger>
      <enableTrackerLumaTrigger description="Enable Flag for for adjusting luma weight based on lux index" tuning_parameter_level="rarely_tune">false</enableTrackerLumaTrigger>
      <LuxTrackerLumaWeight description="Tracker weight tuning structure, which is shared between normal and flash use case.">
        <LuxTrackerWeightZone>
          <zoneTrigger description="lux level start and end values that define trigger region">
            <start>0</start>
            <end>0</end>
          </zoneTrigger>
          <zoneData description="Triggered data: tracker weight that will be adjusted based on lux level">
            <!--

Base Type Tuning Definition

 -->
            <LuxTrackerWeight description="Min and Max tracker luma weight wrt tracker size." tuning_parameter_level="rarely_tune">
              <start>0</start>
              <end>0</end>
            </LuxTrackerWeight>
          </zoneData>
        </LuxTrackerWeightZone>
      </LuxTrackerLumaWeight>
    </trackerLumaWeightLuxIndexTrigger>
    <trackerSize description="min and max tracker size to determine tracker weight" tuning_parameter_level="never_tune">
      <start>0.2</start>
      <end>0.5</end>
    </trackerSize>
    <trackerSizeWeightLuxIndexTrigger>
      <enableTrackerSizeTrigger description="Enable Flag for for adjusting tracker size weight based on lux index" tuning_parameter_level="rarely_tune">false</enableTrackerSizeTrigger>
      <LuxTrackerSizeWeight description="Tracker weight tuning structure, which is shared between normal and flash use case.">
        <LuxTrackerWeightZone>
          <zoneTrigger description="lux level start and end values that define trigger region">
            <start>0</start>
            <end>0</end>
          </zoneTrigger>
          <zoneData description="Triggered data: tracker weight that will be adjusted based on lux level">
            <!--

Base Type Tuning Definition

 -->
            <LuxTrackerWeight description="Min and Max tracker luma weight wrt tracker size." tuning_parameter_level="rarely_tune">
              <start>0</start>
              <end>0</end>
            </LuxTrackerWeight>
          </zoneData>
        </LuxTrackerWeightZone>
      </LuxTrackerSizeWeight>
    </trackerSizeWeightLuxIndexTrigger>
    <enableTrackerROIHistAdj description="Enable Flag for adjustment on Histogram AEC target calculation" tuning_parameter_level="often_tune">false</enableTrackerROIHistAdj>
    <ROIHistAdjZone>
      <zoneTrigger>
        <start>0</start>
        <end>190</end>
      </zoneTrigger>
      <zoneData>
        <!--

Base Type Tuning Definition

 -->
        <darkLumaRatioRange description="The ratio between ROI and frame luma to determine if an ROI is dark ROI." tuning_parameter_level="rarely_tune">
          <start>0.15</start>
          <end>0.3</end>
        </darkLumaRatioRange>
        <darkROIAdjustParams>
          <minTargetAdjRatio description="This value overrides the minimal target adjust ratio in normal histogram AEC." range="[0.1,1.0]" tuning_parameter_level="often_tune">0.35</minTargetAdjRatio>
          <maxTargetAdjRatio description="This value overrides the maximal target adjust ratio in normal histogram AEC." range="[1.0,2.0]" tuning_parameter_level="often_tune">3</maxTargetAdjRatio>
          <darkRefLow description="This value overrides the darkRefLow in normal histogram AEC." range="[0,50]" tuning_parameter_level="rarely_tune">3</darkRefLow>
          <satRefHigh description="This value overrides the satRefHigh in normal histogram AEC." range="[100,255]" tuning_parameter_level="rarely_tune">350</satRefHigh>
        </darkROIAdjustParams>
        <!--

Base Type Tuning Definition

 -->
        <brightLumaRatioRange description="The ratio between ROI and frame luma to determine if an ROI is bright ROI." tuning_parameter_level="rarely_tune">
          <start>3</start>
          <end>6</end>
        </brightLumaRatioRange>
        <brightROIAdjustParams>
          <minTargetAdjRatio description="This value overrides the minimal target adjust ratio in normal histogram AEC." range="[0.1,1.0]" tuning_parameter_level="often_tune">0.35</minTargetAdjRatio>
          <maxTargetAdjRatio description="This value overrides the maximal target adjust ratio in normal histogram AEC." range="[1.0,2.0]" tuning_parameter_level="often_tune">3</maxTargetAdjRatio>
          <darkRefLow description="This value overrides the darkRefLow in normal histogram AEC." range="[0,50]" tuning_parameter_level="rarely_tune">3</darkRefLow>
          <satRefHigh description="This value overrides the satRefHigh in normal histogram AEC." range="[100,255]" tuning_parameter_level="rarely_tune">350</satRefHigh>
        </brightROIAdjustParams>
      </zoneData>
    </ROIHistAdjZone>
  </trackerMtr>
  <trackerConv>
    <convSpeedAdjRatio description="Specify the adjustment of convergence speed during Tracker AEC convergence" range="[0,10]" tuning_parameter_level="often_tune">0.5</convSpeedAdjRatio>
    <speedAdjDelayTimeEnter description="Specify the delay in time to start adjusting Convergence speed" range="[0,10]" tuning_parameter_level="rarely_tune">0.4</speedAdjDelayTimeEnter>
    <speedAdjDelayTimeExit description="Specify the delay in time to start adjusting Convergence speed" range="[0,10]" tuning_parameter_level="rarely_tune">0</speedAdjDelayTimeExit>
  </trackerConv>
  <statsROIProcess>
    <statsROIProcessEnable>1</statsROIProcessEnable>
    <statsROIPriority>
      <dominantScoreEnhancement description="If we have dominant tracker which is choose from previous frame, we enhance this dominant tracker score by multiple this value" range="[0.0,1.0]">0.2</dominantScoreEnhancement>
      <FaceROISizeWeight description="Weight vector based on (tracker roi diagonal)/(frame diagonal), 1 level trigger with distance trigger control type" tuning_parameter_level="rarely_tune">
        <triggerPt>
          <start range="[-100.0,15000.0]">0</start>
          <end range="[-100.0,15000.0]">0</end>
        </triggerPt>
        <triggerData>
          <triggerPt>
            <start range="[-100.0,15000.0]">0.2</start>
            <end range="[-100.0,15000.0]">0.2</end>
          </triggerPt>
          <triggerData>
            <data range="[0.0,9999.9]">0.2</data>
          </triggerData>
        </triggerData>
      </FaceROISizeWeight>
      <FaceROILocationWeight description="Weight vector based on distance from the center of Tracker ROI to the center of frame, 1 level trigger with distance trigger control type" tuning_parameter_level="rarely_tune">
        <triggerPt>
          <start range="[-100.0,15000.0]">0</start>
          <end range="[-100.0,15000.0]">0</end>
        </triggerPt>
        <triggerData>
          <triggerPt>
            <start range="[-100.0,15000.0]">0.2</start>
            <end range="[-100.0,15000.0]">0.2</end>
          </triggerPt>
          <triggerData>
            <data range="[0.0,9999.9]">0.9</data>
          </triggerData>
        </triggerData>
      </FaceROILocationWeight>
    </statsROIPriority>
    <statsROIStable>
      <statsROIDiffEnable>1</statsROIDiffEnable>
      <TriggerCtrlType>TriggerCtrlGain</TriggerCtrlType>
      <statsROIDiffThreshold description="statsROIDifference for location, size and count" tuning_parameter_level="rarely_tune">
        <triggerPt>
          <start range="[-100.0,15000.0]">0</start>
          <end range="[-100.0,15000.0]">0</end>
        </triggerPt>
        <triggerData>
          <triggerPt>
            <start range="[-100.0,15000.0]">8</start>
            <end range="[-100.0,15000.0]">8</end>
          </triggerPt>
          <triggerData>
            <locationThreshold description="the center of tracker roi change threshold" range="[0.0,100.0]">2</locationThreshold>
            <sizeThreshold description="the size of tracker roi change threshold" range="[0.0,100.0]">2</sizeThreshold>
            <countThreshold description="If the tracker roi stable keep n frame, and n bigger than this threshold, and this tracker roi will be set to be stable" range="[0,100]">3</countThreshold>
          </triggerData>
        </triggerData>
      </statsROIDiffThreshold>
    </statsROIStable>
  </statsROIProcess>
</Tracker>