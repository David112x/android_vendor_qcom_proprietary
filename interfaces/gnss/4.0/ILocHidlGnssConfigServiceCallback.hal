/*
 * Copyright (c) 2020 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 *
 */

package vendor.qti.gnss@4.0;
import @2.1::ILocHidlGnssConfigServiceCallback;

interface ILocHidlGnssConfigServiceCallback extends @2.1::ILocHidlGnssConfigServiceCallback {
    /**
     * GNSS constellation type
     *
     * This is to specify the navigation satellite system, for example, as listed in Section 3.5 in
     * RINEX Version 3.04.
     */
    enum GnssConstellationType : uint8_t {
        UNKNOWN = 0,
        /** Global Positioning System. */
        GPS     = 1,
        /** Satellite-Based Augmentation System. */
        SBAS    = 2,
        /** Global Navigation Satellite System. */
        GLONASS = 3,
        /** Quasi-Zenith Satellite System. */
        QZSS    = 4,
        /** BeiDou Navigation Satellite System. */
        BEIDOU  = 5,
        /** Galileo Navigation Satellite System. */
        GALILEO = 6,
        /** Indian Regional Navigation Satellite System. */
        IRNSS   = 7,
    };

    @export(name="", value_prefix="ROBUST_LOCATION_CONFIG_")
    enum RobustLocationConfigValidBit : uint16_t {
        ENABLE_BIT          = (1<<0),   // robust location enable status valid
        ENABLE_FOR_E911_BIT = (1<<1),   // robust location enableForE911 status valid
        VERSION_INFO_BIT    = (1<<2),   // robust location version info status valid
    };

    struct RobustLocationInfo {
        uint32_t validMask;
        bool enable;
        bool enableForE911;
        uint8_t major;
        uint16_t minor;
    };

    getGnssSvTypeConfigCb_4_0(vec<GnssConstellationType> disabledSvTypeList);
    getRobustLocationConfigCb(RobustLocationInfo info);
};

