////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  camxdisplayconfig.h
/// @brief CamX Display Config utility functionality
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef CAMXDISPLAYCONFIG_H
#define CAMXDISPLAYCONFIG_H

#include "camxformats.h"


CAMX_NAMESPACE_BEGIN

#pragma pack(push, 8)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Class that implements Display config interface
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class CAMX_VISIBILITY_PUBLIC DisplayConfigInterface
{
public:

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// SetCameraStatus
    ///
    /// @brief  API to set Camera Launch status
    ///
    /// @param  status Camera On/Off status
    ///
    /// @return CamxResultSuccess if successful, Errors specified by CamxResults otherwise
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static CamxResult SetCameraStatus(
        UINT32 status);

private:
    DisplayConfigInterface()                                                  = delete;
    DisplayConfigInterface(const DisplayConfigInterface& rOther)              = delete;
    DisplayConfigInterface(const DisplayConfigInterface&& rrOther)            = delete;
    DisplayConfigInterface& operator=(const DisplayConfigInterface& rOther)   = delete;
    DisplayConfigInterface& operator=(const DisplayConfigInterface&& rrOther) = delete;
};

CAMX_NAMESPACE_END

#pragma pack(pop)

#endif // CAMXDISPLAYCONFIG_H
