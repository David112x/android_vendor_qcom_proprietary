////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  camxcvpica20titan17x.cpp
/// @brief CVPICA20Titan17x class implementation
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "titan170_ipe.h"
#include "icasetting.h"
#include "camxutils.h"
#include "camxcvpica20titan17x.h"
#include "camxipeica20.h"
#include "Process_ICA.h"
#include "Process_CVP.h"
#include "camxiqinterface.h"

CAMX_NAMESPACE_BEGIN

#define MANTISSA_BITS                   (16)
#define EXP_BITS                        (6)

#define MANTISSA_MASK               ((1 << MANTISSA_BITS) - 1)
#define EXPONENT_MASK               ((1 << EXP_BITS) - 1)


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CVPICA20Titan17x::CVPICA20Titan17x
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CVPICA20Titan17x::CVPICA20Titan17x()
{
    m_pCVPICAFrameCfgData = NULL;

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CVPICA20Titan17x::CreateCmdList
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CamxResult CVPICA20Titan17x::CreateCmdList(
    VOID*   pSettingData,
    UINT32* pICAHWSettingParams)
{
    CamxResult result = CamxResultSuccess;

    ISPInputData*           pInputData             = static_cast<ISPInputData*>(pSettingData);
    ICA20HWSettingParams*   pModuleHWSettingParams = reinterpret_cast<ICA20HWSettingParams*>(pICAHWSettingParams);

    pInputData->pipelineCVPData.pCVPICAFrameCfgData = m_pCVPICAFrameCfgData;

    return result;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CVPICA20Titan17x::WriteLUTtoDMI
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CamxResult CVPICA20Titan17x::WriteLUTtoDMI(
    ISPInputData* pInputData)
{
    CamxResult        result         = CamxResultSuccess;
    CAMX_UNREFERENCED_PARAM(pInputData);

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CVPICA20Titan17x::PackIQRegisterSetting
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CamxResult CVPICA20Titan17x::PackIQRegisterSetting(
    VOID*  pInput,
    VOID*  pOutputVal)
{
    CamxResult result = CamxResultSuccess;

    UINT32 index = 0;

    ICAOutputData*             pOutput             = static_cast<ICAOutputData*>(pOutputVal);
    NcLibcvpDmeFrameConfigIca* pCVPICAFrameCfgData = static_cast<NcLibcvpDmeFrameConfigIca*>(pOutput->pCVPICAFrameCfgData);
    ICAUnpackedField*          pUnpackedData       = static_cast<ICAUnpackedField*>(pInput);
    ICA_REG_v30*               pRegData            = static_cast<ICA_REG_v30*>(pUnpackedData->pRegData);
    IcaParameters*             pIcaParams          = static_cast<IcaParameters*>(pUnpackedData->pIcaParameter);

    for (index = 0; index < 16; index++)
    {
        pCVPICAFrameCfgData->nOpgInterpLUT0[index] =
            static_cast<INT32>(pIcaParams->opgInterpolationCoefficients0[index]);
        pCVPICAFrameCfgData->nOpgInterpLUT1[index] =
            static_cast<INT32>(pIcaParams->opgInterpolationCoefficients1[index]);
        pCVPICAFrameCfgData->nOpgInterpLUT2[index] =
            static_cast<INT32>(pIcaParams->opgInterpolationCoefficients2[index]);
    }

    pCVPICAFrameCfgData->nCtcXTranslation = pRegData->CTC_X_TRANSLATION;
    pCVPICAFrameCfgData->nCtcYTranslation = pRegData->CTC_Y_TRANSLATION;

    m_pCVPICAFrameCfgData = pCVPICAFrameCfgData;

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CVPICA20Titan17x::SetupRegisterSetting
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CamxResult CVPICA20Titan17x::SetupRegisterSetting(
    VOID*  pInput)
{
    CamxResult result = CamxResultSuccess;
    CAMX_UNREFERENCED_PARAM(pInput);

    CAMX_LOG_ERROR(CamxLogGroupPProc, "Function not implemented");

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CVPICA20Titan17x::CopyRegCmd
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
UINT32 CVPICA20Titan17x::CopyRegCmd(
    VOID* pData)
{
    UINT32 dataCopied = 0;

    CAMX_UNREFERENCED_PARAM(pData);

    CAMX_LOG_ERROR(CamxLogGroupPProc, "Function not implemented");

    return dataCopied;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CVPICA20Titan17x::~CVPICA20Titan17x
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CVPICA20Titan17x::~CVPICA20Titan17x()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CVPICA20Titan17x::DumpRegConfig
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
VOID CVPICA20Titan17x::DumpRegConfig()
{
    CAMX_LOG_ERROR(CamxLogGroupPProc, "Function not implemented");
}

CAMX_NAMESPACE_END
