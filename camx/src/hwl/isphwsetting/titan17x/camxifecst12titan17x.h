////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  camxifecst12titan17x.h
/// @brief IFE CST12 register setting for Titan17x
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef CAMXIFECST12TITAN17X_H
#define CAMXIFECST12TITAN17X_H

#include "titan170_ife.h"
#include "camxisphwsetting.h"

CAMX_NAMESPACE_BEGIN

CAMX_BEGIN_PACKED

/// @brief IFE CST12 Module Dependence Data
struct IFECST12RegCmd
{
    IFE_IFE_0_VFE_COLOR_XFORM_CH0_COEFF_CFG_0 ch0Coefficient0;        ///< CH0_COEFF_CFG_0
    IFE_IFE_0_VFE_COLOR_XFORM_CH0_COEFF_CFG_1 ch0Coefficient1;        ///< CH0_COEFF_CFG_1
    IFE_IFE_0_VFE_COLOR_XFORM_CH0_OFFSET_CFG  ch0OffsetConfig;        ///< CH0_OFFSET_CFG
    IFE_IFE_0_VFE_COLOR_XFORM_CH0_CLAMP_CFG   ch0ClampConfig;         ///< CH0_CLAMP_CFG
    IFE_IFE_0_VFE_COLOR_XFORM_CH1_COEFF_CFG_0 ch1CoefficientConfig0;  ///< CH1_COEFF_CFG_0
    IFE_IFE_0_VFE_COLOR_XFORM_CH1_COEFF_CFG_1 ch1CoefficientConfig1;  ///< CH1_COEFF_CFG_1
    IFE_IFE_0_VFE_COLOR_XFORM_CH1_OFFSET_CFG  ch1OffsetConfig;        ///< CH1_OFFSET_CFG
    IFE_IFE_0_VFE_COLOR_XFORM_CH1_CLAMP_CFG   ch1ClampConfig;         ///< CH1_CLAMP_CFG
    IFE_IFE_0_VFE_COLOR_XFORM_CH2_COEFF_CFG_0 ch2CoefficientConfig0;  ///< CH2_COEFF_CFG_0
    IFE_IFE_0_VFE_COLOR_XFORM_CH2_COEFF_CFG_1 ch2CoefficientConfig1;  ///< CH2_COEFF_CFG_1
    IFE_IFE_0_VFE_COLOR_XFORM_CH2_OFFSET_CFG  ch2OffsetConfig;        ///< CH2_OFFSET_CFG
    IFE_IFE_0_VFE_COLOR_XFORM_CH2_CLAMP_CFG   ch2ClampConfig;         ///< CH2_CLAMP_CFG
} CAMX_PACKED;

CAMX_END_PACKED

static const UINT32 IFECST12RegLengthDWord = sizeof(IFECST12RegCmd) / sizeof(UINT32);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief IFE CST12 register setting for Titan17x
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class IFECST12Titan17x final : public ISPHWSetting
{
public:
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// CreateCmdList
    ///
    /// @brief  Generate the Command List
    ///
    /// @param  pInputData       Pointer to the Inputdata
    /// @param  pDMIBufferOffset Pointer for DMI Buffer
    ///
    /// @return CamxResultSuccess if successful.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult CreateCmdList(
        VOID*   pInputData,
        UINT32* pDMIBufferOffset);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// UpdateTuningMetadata
    ///
    /// @brief  Update Tuning Metadata
    ///
    /// @param  pTuningMetadata      Pointer to the Tuning Metadata
    ///
    /// @return CamxResultSuccess if successful.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult UpdateTuningMetadata(
        VOID*  pTuningMetadata);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// PackIQRegisterSetting
    ///
    /// @brief  Packing register setting based on calculation data
    ///
    /// @param  pInput       Pointer to the Input data to the module for calculation
    /// @param  pOutput      Pointer to the Output data to the module for DMI buffer
    ///
    /// @return Return CamxResult.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult PackIQRegisterSetting(
        VOID* pInput,
        VOID* pOutput);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// SetupRegisterSetting
    ///
    /// @brief  Setup register value based on CamX Input
    ///
    /// @param  pInput       Pointer to the Input data to the module for calculation
    ///
    /// @return Return CamxResult.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult SetupRegisterSetting(
        VOID*  pInput);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// ~IFECST12Titan17x
    ///
    /// @brief  Constructor
    ///
    /// @return None
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IFECST12Titan17x();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// IFECST12Titan17x
    ///
    /// @brief  Constructor
    ///
    /// @return None
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    IFECST12Titan17x();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// DumpRegConfig
    ///
    /// @brief  Print register configuration of Crop module for debug
    ///
    ///
    /// @return None
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    VOID DumpRegConfig();

private:
    IFECST12RegCmd    m_regCmd; ///< Register List of this Module

    IFECST12Titan17x(const IFECST12Titan17x&)            = delete; ///< Disallow the copy constructor
    IFECST12Titan17x& operator=(const IFECST12Titan17x&) = delete; ///< Disallow assignment operator
};

CAMX_NAMESPACE_END

#endif // CAMXIFECST12TITAN17X_H
