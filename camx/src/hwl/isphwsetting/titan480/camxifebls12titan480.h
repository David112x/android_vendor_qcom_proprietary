////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  camxifebls12titan480.h
/// @brief IFE BLS 12 register setting for Titan480
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef CAMXIFEBLS12TITAN480_H
#define CAMXIFEBLS12TITAN480_H

#include "titan480_ife.h"
#include "camxisphwsetting.h"

CAMX_NAMESPACE_BEGIN

CAMX_BEGIN_PACKED

// @brief: This structure contains the register of the BLS12 module
struct IFEBLS12Titan480RegCmd1
{
    IFE_IFE_0_PP_CLC_BLS_MODULE_CFG                 mdouleConfig;       ///< Module Config
} CAMX_PACKED;

// @brief: This structure contains the register list of the BLS12 module
struct IFEBLS12Titan480RegCmd2
{
    IFE_IFE_0_PP_CLC_BLS_BLACK_LEVEL_CFG_0          configRegister0;    ///< Config Register 0
    IFE_IFE_0_PP_CLC_BLS_BLACK_LEVEL_CFG_1          configRegister1;    ///< Config Register 1
    IFE_IFE_0_PP_CLC_BLS_BLACK_LEVEL_THRESHOLD_0    thresholdRegister0; ///< Threshold Register 0
    IFE_IFE_0_PP_CLC_BLS_BLACK_LEVEL_THRESHOLD_1    thresholdRegister1; ///< Threshold Register 1
} CAMX_PACKED;

CAMX_END_PACKED

static const UINT32 IFEBLS12Titan480RegLengthDWord1 = sizeof(IFEBLS12Titan480RegCmd1) / sizeof(UINT32);
static const UINT32 IFEBLS12Titan480RegLengthDWord2 = sizeof(IFEBLS12Titan480RegCmd2) / sizeof(UINT32);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief IFE BLS12 register setting for Titan480
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class IFEBLS12Titan480 final : public ISPHWSetting
{
public:
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// CreateCmdList
    ///
    /// @brief  Generate the Command List
    ///
    /// @param  pInputData       Pointer to the Inputdata
    /// @param  pDMIBufferOffset Pointer for DMI Buffer
    ///
    /// @return CamxResultSuccess if successful.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult CreateCmdList(
        VOID*   pInputData,
        UINT32* pDMIBufferOffset);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// UpdateTuningMetadata
    ///
    /// @brief  Update Tuning metadata
    ///
    /// @param  pTuningMetadata      Pointer to the Tuning Metadata
    ///
    /// @return CamxResultSuccess if successful.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult UpdateTuningMetadata(
        VOID*  pTuningMetadata);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// PackIQRegisterSetting
    ///
    /// @brief  Packing register setting based on calculation data
    ///
    /// @param  pInput       Pointer to the Input data to the module for calculation
    /// @param  pOutput      Pointer to the Output data to the module for DMI buffer
    ///
    /// @return Return CamxResult.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult PackIQRegisterSetting(
        VOID* pInput,
        VOID* pOutput);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// SetupRegisterSetting
    ///
    /// @brief  Setup register value based on CamX Input
    ///
    /// @param  pInput       Pointer to the Input data to the module for calculation
    ///
    /// @return Return CamxResult.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult SetupRegisterSetting(
        VOID*  pInput);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// ~IFEBLS12Titan480
    ///
    /// @brief  Constructor
    ///
    /// @return None
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IFEBLS12Titan480();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// IFEBLS12Titan480
    ///
    /// @brief  Constructor
    ///
    /// @return None
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    IFEBLS12Titan480();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// DumpRegConfig
    ///
    /// @brief  Print register configuration of Crop module for debug
    ///
    /// @return None
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    VOID DumpRegConfig();

private:
    IFEBLS12Titan480RegCmd1 m_regCmd1;                              ///< Register List of this Module
    IFEBLS12Titan480RegCmd2 m_regCmd2;                              ///< Register List of this Module
    IFEBLS12Titan480(const IFEBLS12Titan480&)             = delete; ///< Disallow the copy constructor
    IFEBLS12Titan480& operator=(const IFEBLS12Titan480&)  = delete; ///< Disallow assignment operator
};

CAMX_NAMESPACE_END

#endif // CAMXIFEPEDESTAL13TITAN480_H
