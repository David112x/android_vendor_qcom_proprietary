////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  camxifegtm10titan480.h
/// @brief IFE GTM10 register setting for Titan480
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef CAMXIFEGTM10TITAN480_H
#define CAMXIFEGTM10TITAN480_H

#include "titan480_ife.h"
#include "camxisphwsetting.h"

CAMX_NAMESPACE_BEGIN

CAMX_BEGIN_PACKED

/// @brief IFE GTM10 Module Register Set
struct IFEGTM10Titan480RegCmd
{
    IFE_IFE_0_PP_CLC_GTM_DMI_LUT_BANK_CFG       DMILUTBankConfig;   ///< DMI LUT bank config register
    IFE_IFE_0_PP_CLC_GTM_MODULE_LUT_BANK_CFG    LUTBankConfig;      ///< Module LUT bank config register
    IFE_IFE_0_PP_CLC_GTM_MODULE_CFG             moduleConfig;       ///< Module config regitser
} CAMX_PACKED;

CAMX_END_PACKED

static const UINT   GTMTitan480LUTRawBank0         = IFE_IFE_0_PP_CLC_GTM_MODULE_LUT_BANK_CFG_BANK_SEL_LUT_BANK0;
static const UINT   GTMTitan480LUTRawBank1         = IFE_IFE_0_PP_CLC_GTM_MODULE_LUT_BANK_CFG_BANK_SEL_LUT_BANK1;
static const UINT32 IFEGTM10Titan480RegLengthDword = sizeof(IFEGTM10Titan480RegCmd) / sizeof(UINT32);
static const UINT32 IFEGTM10Titan480LUTTableSize   = 64; // DMI table size
static const UINT32 IFEGTM10Titan480DMILengthDword = IFEGTM10Titan480LUTTableSize * 2;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief IFE GTM10 register setting for Titan480
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class IFEGTM10Titan480 final : public ISPHWSetting
{
public:
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// CreateCmdList
    ///
    /// @brief  Generate the Command List
    ///
    /// @param  pInputData       Pointer to the Inputdata
    /// @param  pDMIBufferOffset Pointer for DMI Buffer
    ///
    /// @return CamxResultSuccess if successful.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult CreateCmdList(
        VOID*   pInputData,
        UINT32* pDMIBufferOffset);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// CreateSubCmdList
    ///
    /// @brief  Generate the Command List
    ///
    /// @param  pInputData       Pointer to the Inputdata
    /// @param  pDMIBufferOffset Pointer for DMI Buffer
    ///
    /// @return CamxResultSuccess if successful.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult CreateSubCmdList(
        VOID*   pInputData,
        UINT32* pDMIBufferOffset);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// UpdateTuningMetadata
    ///
    /// @brief  Update Tuning Metadata
    ///
    /// @param  pTuningMetadata      Pointer to the Tuning Metadata
    ///
    /// @return CamxResultSuccess if successful.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult UpdateTuningMetadata(
        VOID*  pTuningMetadata);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// PackIQRegisterSetting
    ///
    /// @brief  Packing register setting based on calculation data
    ///
    /// @param  pInput       Pointer to the Input data to the module for calculation
    /// @param  pOutput      Pointer to the Output data to the module for DMI buffer
    ///
    /// @return Return CamxResult.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult PackIQRegisterSetting(
        VOID* pInput,
        VOID* pOutput);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// SetupRegisterSetting
    ///
    /// @brief  Setup register value based on CamX Input
    ///
    /// @param  pInput       Pointer to the Input data to the module for calculation
    ///
    /// @return Return CamxResult.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CamxResult SetupRegisterSetting(
        VOID*  pInput);

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// ~IFEGTM10Titan480
    ///
    /// @brief  Constructor
    ///
    /// @return None
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IFEGTM10Titan480();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// IFEGTM10Titan480
    ///
    /// @brief  Constructor
    ///
    /// @return None
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    IFEGTM10Titan480();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// DumpRegConfig
    ///
    /// @brief  Print register configuration of GTM module for debug
    ///
    ///
    /// @return None
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    VOID DumpRegConfig();

private:
    IFEGTM10Titan480RegCmd  m_regCmd;       ///< Register List of this Module
    UINT8                   m_bankSelect;   ///< GTM LUT Bank Selection
    VOID*                   m_pGTMLUTPtr;   ///< Pointer to the GTM LUT

    IFEGTM10Titan480(const IFEGTM10Titan480&)            = delete; ///< Disallow the copy constructor
    IFEGTM10Titan480& operator=(const IFEGTM10Titan480&) = delete; ///< Disallow assignment operator
};

CAMX_NAMESPACE_END

#endif // CAMXIFEGTM10TITAN480_H
