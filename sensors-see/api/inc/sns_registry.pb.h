/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Mon Jun  5 12:28:00 2017. */

#ifndef PB_SNS_REGISTRY_PB_H_INCLUDED
#define PB_SNS_REGISTRY_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _sns_registry_msgid {
    SNS_REGISTRY_MSGID_SNS_REGISTRY_READ_REQ = 512,
    SNS_REGISTRY_MSGID_SNS_REGISTRY_WRITE_REQ = 513,
    SNS_REGISTRY_MSGID_SNS_REGISTRY_READ_EVENT = 514
} sns_registry_msgid;
#define _sns_registry_msgid_MIN SNS_REGISTRY_MSGID_SNS_REGISTRY_READ_REQ
#define _sns_registry_msgid_MAX SNS_REGISTRY_MSGID_SNS_REGISTRY_READ_EVENT
#define _sns_registry_msgid_ARRAYSIZE ((sns_registry_msgid)(SNS_REGISTRY_MSGID_SNS_REGISTRY_READ_EVENT+1))
#define sns_registry_msgid_SNS_REGISTRY_MSGID_SNS_REGISTRY_READ_REQ SNS_REGISTRY_MSGID_SNS_REGISTRY_READ_REQ
#define sns_registry_msgid_SNS_REGISTRY_MSGID_SNS_REGISTRY_WRITE_REQ SNS_REGISTRY_MSGID_SNS_REGISTRY_WRITE_REQ
#define sns_registry_msgid_SNS_REGISTRY_MSGID_SNS_REGISTRY_READ_EVENT SNS_REGISTRY_MSGID_SNS_REGISTRY_READ_EVENT

/* Struct definitions */
typedef struct _sns_registry_data {
    pb_callback_t items;
/* @@protoc_insertion_point(struct:sns_registry_data) */
} sns_registry_data;

typedef struct _sns_registry_read_req {
    pb_callback_t name;
/* @@protoc_insertion_point(struct:sns_registry_read_req) */
} sns_registry_read_req;

typedef struct _sns_registry_data_item {
    pb_callback_t name;
    bool has_version;
    uint32_t version;
    bool has_subgroup;
    sns_registry_data subgroup;
    pb_callback_t str;
    bool has_flt;
    float flt;
    bool has_sint;
    int64_t sint;
/* @@protoc_insertion_point(struct:sns_registry_data_item) */
} sns_registry_data_item;

typedef struct _sns_registry_read_event {
    pb_callback_t name;
    sns_registry_data data;
/* @@protoc_insertion_point(struct:sns_registry_read_event) */
} sns_registry_read_event;

typedef struct _sns_registry_write_req {
    pb_callback_t name;
    sns_registry_data data;
/* @@protoc_insertion_point(struct:sns_registry_write_req) */
} sns_registry_write_req;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sns_registry_data_init_default           {{{NULL}, NULL}}
#define sns_registry_data_item_init_default      {{{NULL}, NULL}, false, 0, false, sns_registry_data_init_default, {{NULL}, NULL}, false, 0, false, 0}
#define sns_registry_read_req_init_default       {{{NULL}, NULL}}
#define sns_registry_write_req_init_default      {{{NULL}, NULL}, sns_registry_data_init_default}
#define sns_registry_read_event_init_default     {{{NULL}, NULL}, sns_registry_data_init_default}
#define sns_registry_data_init_zero              {{{NULL}, NULL}}
#define sns_registry_data_item_init_zero         {{{NULL}, NULL}, false, 0, false, sns_registry_data_init_zero, {{NULL}, NULL}, false, 0, false, 0}
#define sns_registry_read_req_init_zero          {{{NULL}, NULL}}
#define sns_registry_write_req_init_zero         {{{NULL}, NULL}, sns_registry_data_init_zero}
#define sns_registry_read_event_init_zero        {{{NULL}, NULL}, sns_registry_data_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define sns_registry_data_items_tag              3
#define sns_registry_read_req_name_tag           1
#define sns_registry_data_item_name_tag          1
#define sns_registry_data_item_version_tag       2
#define sns_registry_data_item_subgroup_tag      10
#define sns_registry_data_item_str_tag           11
#define sns_registry_data_item_flt_tag           12
#define sns_registry_data_item_sint_tag          13
#define sns_registry_read_event_name_tag         1
#define sns_registry_read_event_data_tag         2
#define sns_registry_write_req_name_tag          1
#define sns_registry_write_req_data_tag          2

/* Struct field encoding specification for nanopb */
extern const pb_field_t sns_registry_data_fields[2];
extern const pb_field_t sns_registry_data_item_fields[7];
extern const pb_field_t sns_registry_read_req_fields[2];
extern const pb_field_t sns_registry_write_req_fields[3];
extern const pb_field_t sns_registry_read_event_fields[3];

/* Maximum encoded size of messages (where known) */
/* sns_registry_data_size depends on runtime parameters */
/* sns_registry_data_item_size depends on runtime parameters */
/* sns_registry_read_req_size depends on runtime parameters */
/* sns_registry_write_req_size depends on runtime parameters */
/* sns_registry_read_event_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SNS_REGISTRY_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
