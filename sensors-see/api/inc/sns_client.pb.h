/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Mon Jun  5 12:27:56 2017. */

#ifndef PB_SNS_CLIENT_PB_H_INCLUDED
#define PB_SNS_CLIENT_PB_H_INCLUDED
#include <pb.h>

#include "sns_std.pb.h"

#include "sns_std_type.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _sns_client_msgid {
    SNS_CLIENT_MSGID_SNS_CLIENT_DISABLE_REQ = 10
} sns_client_msgid;
#define _sns_client_msgid_MIN SNS_CLIENT_MSGID_SNS_CLIENT_DISABLE_REQ
#define _sns_client_msgid_MAX SNS_CLIENT_MSGID_SNS_CLIENT_DISABLE_REQ
#define _sns_client_msgid_ARRAYSIZE ((sns_client_msgid)(SNS_CLIENT_MSGID_SNS_CLIENT_DISABLE_REQ+1))
#define sns_client_msgid_SNS_CLIENT_MSGID_SNS_CLIENT_DISABLE_REQ SNS_CLIENT_MSGID_SNS_CLIENT_DISABLE_REQ

typedef enum _sns_client_delivery {
    SNS_CLIENT_DELIVERY_WAKEUP = 0,
    SNS_CLIENT_DELIVERY_NO_WAKEUP = 1
} sns_client_delivery;
#define _sns_client_delivery_MIN SNS_CLIENT_DELIVERY_WAKEUP
#define _sns_client_delivery_MAX SNS_CLIENT_DELIVERY_NO_WAKEUP
#define _sns_client_delivery_ARRAYSIZE ((sns_client_delivery)(SNS_CLIENT_DELIVERY_NO_WAKEUP+1))
#define sns_client_delivery_SNS_CLIENT_DELIVERY_WAKEUP SNS_CLIENT_DELIVERY_WAKEUP
#define sns_client_delivery_SNS_CLIENT_DELIVERY_NO_WAKEUP SNS_CLIENT_DELIVERY_NO_WAKEUP

/* Struct definitions */
typedef struct _sns_client_event_msg {
    sns_std_suid suid;
    pb_callback_t events;
/* @@protoc_insertion_point(struct:sns_client_event_msg) */
} sns_client_event_msg;

typedef struct _sns_client_event_msg_sns_client_event {
    uint32_t msg_id;
    uint64_t timestamp;
    pb_callback_t payload;
/* @@protoc_insertion_point(struct:sns_client_event_msg_sns_client_event) */
} sns_client_event_msg_sns_client_event;

typedef struct _sns_client_request_msg_suspend_config {
    sns_std_client_processor client_proc_type;
    sns_client_delivery delivery_type;
/* @@protoc_insertion_point(struct:sns_client_request_msg_suspend_config) */
} sns_client_request_msg_suspend_config;

typedef struct _sns_client_request_msg {
    sns_std_suid suid;
    uint32_t msg_id;
    sns_client_request_msg_suspend_config susp_config;
    sns_std_request request;
/* @@protoc_insertion_point(struct:sns_client_request_msg) */
} sns_client_request_msg;

/* Default values for struct fields */
extern const sns_std_client_processor sns_client_request_msg_suspend_config_client_proc_type_default;
extern const sns_client_delivery sns_client_request_msg_suspend_config_delivery_type_default;

/* Initializer values for message structs */
#define sns_client_request_msg_init_default      {sns_std_suid_init_default, 0, sns_client_request_msg_suspend_config_init_default, sns_std_request_init_default}
#define sns_client_request_msg_suspend_config_init_default {SNS_STD_CLIENT_PROCESSOR_APSS, SNS_CLIENT_DELIVERY_WAKEUP}
#define sns_client_event_msg_init_default        {sns_std_suid_init_default, {{NULL}, NULL}}
#define sns_client_event_msg_sns_client_event_init_default {0, 0, {{NULL}, NULL}}
#define sns_client_request_msg_init_zero         {sns_std_suid_init_zero, 0, sns_client_request_msg_suspend_config_init_zero, sns_std_request_init_zero}
#define sns_client_request_msg_suspend_config_init_zero {(sns_std_client_processor)0, (sns_client_delivery)0}
#define sns_client_event_msg_init_zero           {sns_std_suid_init_zero, {{NULL}, NULL}}
#define sns_client_event_msg_sns_client_event_init_zero {0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define sns_client_event_msg_suid_tag            1
#define sns_client_event_msg_events_tag          2
#define sns_client_event_msg_sns_client_event_msg_id_tag 1
#define sns_client_event_msg_sns_client_event_timestamp_tag 2
#define sns_client_event_msg_sns_client_event_payload_tag 3
#define sns_client_request_msg_suspend_config_client_proc_type_tag 1
#define sns_client_request_msg_suspend_config_delivery_type_tag 2
#define sns_client_request_msg_suid_tag          1
#define sns_client_request_msg_msg_id_tag        2
#define sns_client_request_msg_susp_config_tag   3
#define sns_client_request_msg_request_tag       4

/* Struct field encoding specification for nanopb */
extern const pb_field_t sns_client_request_msg_fields[5];
extern const pb_field_t sns_client_request_msg_suspend_config_fields[3];
extern const pb_field_t sns_client_event_msg_fields[3];
extern const pb_field_t sns_client_event_msg_sns_client_event_fields[4];

/* Maximum encoded size of messages (where known) */
#define sns_client_request_msg_size              (37 + sns_std_request_size)
#define sns_client_request_msg_suspend_config_size 4
/* sns_client_event_msg_size depends on runtime parameters */
/* sns_client_event_msg_sns_client_event_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SNS_CLIENT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
