/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Mon Jun  5 12:27:59 2017. */

#ifndef PB_SNS_STD_PB_H_INCLUDED
#define PB_SNS_STD_PB_H_INCLUDED
#include <pb.h>

#include "sns_std_type.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _sns_std_msgid {
    SNS_STD_MSGID_SNS_STD_ATTR_REQ = 1,
    SNS_STD_MSGID_SNS_STD_FLUSH_REQ = 2,
    SNS_STD_MSGID_SNS_STD_ATTR_EVENT = 128,
    SNS_STD_MSGID_SNS_STD_FLUSH_EVENT = 129,
    SNS_STD_MSGID_SNS_STD_ERROR_EVENT = 130
} sns_std_msgid;
#define _sns_std_msgid_MIN SNS_STD_MSGID_SNS_STD_ATTR_REQ
#define _sns_std_msgid_MAX SNS_STD_MSGID_SNS_STD_ERROR_EVENT
#define _sns_std_msgid_ARRAYSIZE ((sns_std_msgid)(SNS_STD_MSGID_SNS_STD_ERROR_EVENT+1))
#define sns_std_msgid_SNS_STD_MSGID_SNS_STD_ATTR_REQ SNS_STD_MSGID_SNS_STD_ATTR_REQ
#define sns_std_msgid_SNS_STD_MSGID_SNS_STD_FLUSH_REQ SNS_STD_MSGID_SNS_STD_FLUSH_REQ
#define sns_std_msgid_SNS_STD_MSGID_SNS_STD_ATTR_EVENT SNS_STD_MSGID_SNS_STD_ATTR_EVENT
#define sns_std_msgid_SNS_STD_MSGID_SNS_STD_FLUSH_EVENT SNS_STD_MSGID_SNS_STD_FLUSH_EVENT
#define sns_std_msgid_SNS_STD_MSGID_SNS_STD_ERROR_EVENT SNS_STD_MSGID_SNS_STD_ERROR_EVENT

/* Struct definitions */
typedef struct _sns_std_attr_event {
    pb_callback_t attributes;
/* @@protoc_insertion_point(struct:sns_std_attr_event) */
} sns_std_attr_event;

typedef struct _sns_std_attr_req {
    bool has_register_updates;
    bool register_updates;
/* @@protoc_insertion_point(struct:sns_std_attr_req) */
} sns_std_attr_req;

typedef struct _sns_std_error_event {
    sns_std_error error;
/* @@protoc_insertion_point(struct:sns_std_error_event) */
} sns_std_error_event;

typedef struct _sns_std_request_batch_spec {
    uint32_t batch_period;
    bool has_flush_period;
    uint32_t flush_period;
    bool has_flush_only;
    bool flush_only;
    bool has_max_batch;
    bool max_batch;
/* @@protoc_insertion_point(struct:sns_std_request_batch_spec) */
} sns_std_request_batch_spec;

typedef struct _sns_std_request {
    bool has_batching;
    sns_std_request_batch_spec batching;
    pb_callback_t payload;
/* @@protoc_insertion_point(struct:sns_std_request) */
} sns_std_request;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sns_std_request_init_default             {false, sns_std_request_batch_spec_init_default, {{NULL}, NULL}}
#define sns_std_request_batch_spec_init_default  {0, false, 0, false, 0, false, 0}
#define sns_std_attr_req_init_default            {false, 0}
#define sns_std_attr_event_init_default          {{{NULL}, NULL}}
#define sns_std_error_event_init_default         {(sns_std_error)0}
#define sns_std_request_init_zero                {false, sns_std_request_batch_spec_init_zero, {{NULL}, NULL}}
#define sns_std_request_batch_spec_init_zero     {0, false, 0, false, 0, false, 0}
#define sns_std_attr_req_init_zero               {false, 0}
#define sns_std_attr_event_init_zero             {{{NULL}, NULL}}
#define sns_std_error_event_init_zero            {(sns_std_error)0}

/* Field tags (for use in manual encoding/decoding) */
#define sns_std_attr_event_attributes_tag        1
#define sns_std_attr_req_register_updates_tag    2
#define sns_std_error_event_error_tag            1
#define sns_std_request_batch_spec_batch_period_tag 1
#define sns_std_request_batch_spec_flush_period_tag 2
#define sns_std_request_batch_spec_flush_only_tag 3
#define sns_std_request_batch_spec_max_batch_tag 4
#define sns_std_request_batching_tag             1
#define sns_std_request_payload_tag              2

/* Struct field encoding specification for nanopb */
extern const pb_field_t sns_std_request_fields[3];
extern const pb_field_t sns_std_request_batch_spec_fields[5];
extern const pb_field_t sns_std_attr_req_fields[2];
extern const pb_field_t sns_std_attr_event_fields[2];
extern const pb_field_t sns_std_error_event_fields[2];

/* Maximum encoded size of messages (where known) */
/* sns_std_request_size depends on runtime parameters */
#define sns_std_request_batch_spec_size          16
#define sns_std_attr_req_size                    2
/* sns_std_attr_event_size depends on runtime parameters */
#define sns_std_error_event_size                 2

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SNS_STD_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
