<?xml version="1.0" encoding="UTF-8"?>
<!--
===============================================================================

  Copyright (c) 2013-2017 Qualcomm Technologies, Inc.
  All Rights Reserved.
  Confidential and Proprietary - Qualcomm Technologies, Inc.

===============================================================================
-->

<tns:secimage xmlns:tns="http://www.qualcomm.com/secimage"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.qualcomm.com/secimage ../xsd/secimage.xsd">

    <metadata>
        <chipset>sdx55</chipset>
        <version>2.0</version>
    </metadata>

    <!--
       See documentation on general_properties below.
    -->
    <general_properties>
        <selected_signer>local_v2</selected_signer>
        <selected_encryptor></selected_encryptor>
        <selected_cert_config>qti_presigned_certs</selected_cert_config>
        <cass_capability>secboot_sha2_pss_subca1</cass_capability>

        <key_size>2048</key_size>
        <exponent>65537</exponent>

        <mrc_index>0</mrc_index>
        <num_root_certs>1</num_root_certs>
        <max_num_root_certs>4</max_num_root_certs>
        <root_revoke_activate_enable>disable</root_revoke_activate_enable>

        <!-- JTAG IDs:
         0x000E50E1 - SDX55:CD90-PG591
         0x000CF0E1 - SDX55:CD90-PH809
         -->
        <msm_part>0x000E50E1</msm_part>
        <soc_hw_version>0x600b0100</soc_hw_version>
        <soc_vers>0x600b</soc_vers>
        <in_use_soc_hw_version>enable</in_use_soc_hw_version>
        <use_serial_number_in_signing>disable</use_serial_number_in_signing>
        <oem_id_independent>disable</oem_id_independent>
        <oem_id>0x0000</oem_id>
        <model_id>0x0000</model_id>
        <debug>disable</debug>
        <multi_serial_numbers>
            <!--<serial>0x12345678</serial>-->
        </multi_serial_numbers>
        <serial_number></serial_number> <!-- This is used when use_serial_number_in_signing is set to 1, populate with chip serial number: ex: 0x12345678 -->

        <secboot_version>3.0</secboot_version>
        <qti_sign>false</qti_sign>
        <oem_sign>true</oem_sign>

        <max_cert_size>2048</max_cert_size>
        <num_certs_in_certchain>3</num_certs_in_certchain>

        <hmac>false</hmac>
        <dsa_type>ecdsa</dsa_type>
        <ecdsa_curve>secp384r1</ecdsa_curve>
        <hash_algorithm>sha384</hash_algorithm>
        <!-- sdx55 also supports RSA padding. To configure this use:
        <dsa_type>rsa</dsa_type>
        <rsa_padding>pss</rsa_padding>
        <hash_algorithm>sha256</hash_algorithm>
        ecdsa_curve needs to be removed if done so -->
        <segment_hash_algorithm>sha384</segment_hash_algorithm>
    </general_properties>

    <!--
        ***general_properties***

        The default properties for all images. These properties may be overridden
        per image in the 'images' section below as needed.

        Supported signer are:
        local: use local signer with test keys
        csms: generate tosign file for csms upload (first run)
              package csms output zip to form signed image (second run)
        cass: use cass signer with production key

        Supported encryptor are:
        ssd_encryption: legacy encryption for OTA, supports MBN and ELF images.
        unified_encryption_2_0: supports ELF images. Image must be signed to encrypt

        Capability selected the signing key used. Currently,
        the following two capabilities are supported. OEM IDs
        are restricted to 0 or 1.

        OEM may obtain additional capabilities from CASS support.

        secboot_sha2_root : Use SHA256 signed root cert.
                            Same as the CSMS SHA256 signed root cert.
        secboot_sha1_root : Use SHA1 signed root cert.
                            Same as the CSMS SHA1 signed root cert.

        If SHA256 is selected, the PK_HASH_IN_FUSE needs to be blown,
        and the ROOT CERT HASH below needs to be blown in OEM PK HASH:
        7be49b72f9e4337223ccb84d6eccca4e61ce16e3602ac2008cb18b75babe6d09

        msm_part: jtag_id for signing. (in hex)
        oem_id: oem_id for signing. (in hex)
        model_id: model_id for signing. (in hex)
        debug: debug_id for signing. (in hex)
        exponent: exponent value used in attestation key generation.

        max_cert_size: Maximum size (in bytes) of one certificate.
        key_size: Size (in bits) of the key used for signing.
        num_certs_in_certchain: Number of certificates in the certificate chain.
        num_root_certs: Number of root certificates in the certificate chain.
    -->

    <parsegen>
        <!--
        Parsegen information by default will be read from parsegen_config.xml.
        Additional image_id's can be included here or existing image_id's may be overwritten
        to be generated with the default image_ids.
        -->
    </parsegen>

    <!-- Signing configurations used by secimage. -->
    <signing>
        <signer_attributes>
            <!--
                Use of CASS signer will require additional license agreement
                and contract. Hardware token is required for access.
            -->
            <cass_signer_attributes>
                <!--
                    keystore_type: PKCS11 (hardware token)
                    token_password: User will be prompted if password
                                    is an empty string
                    token_driver_home: Safenet driver location
                -->
                <user_identity>
                    <keystore_type>PKCS11</keystore_type>
                    <token_password></token_password>
                    <token_driver_home>
                        <windows>C:/WINDOWS/SYSTEM32/eTpkcs11.dll</windows>
                        <linux>/usr/lib/libeTPkcs11.so</linux>
                    </token_driver_home>
                </user_identity>
            </cass_signer_attributes>
        </signer_attributes>
    </signing>

    <data_provisioning>
        <base_path>./../../resources/data_prov_assets/</base_path>
    </data_provisioning>

    <post_process>
        <pil_splitter>$(META_BUILD)/common/tools/misc/pil-splitter.py</pil_splitter>
    </post_process>

    <images_list>
        <!-- FLASHLESS build for SDX55.TN variant, used in SM8250_SDX55 fusion SP. -->
        <image sign_id="sbl1" name="sbl1.mbn" image_type="elf_end_aligned">
            <general_properties_overrides>
                <sw_id>0x00000000</sw_id>
                <debug>nop</debug>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:BOOT_BINARY_MDM)
            </meta_build_location>
        </image>

        <!-- NAND build for stand-alone SDX55.LE variant only. -->
        <image sign_id="sbl1_nand" name="sbl1.mbn" image_type="elf_preamble">
            <general_properties_overrides>
                <sw_id>0x00000000</sw_id>
                <debug>nop</debug>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:BOOT_BINARY, PRODUCT_NAME_PREFIX:SDX55.LE)
            </meta_build_location>
        </image>

        <image sign_id="xbl_config" name="xbl_config.elf" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000025</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:BOOT_CONFIG_MDM) <!-- fusion sdx55_mdm -->
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:BOOT_CONFIG) <!-- stand-alone sdx55 -->
            </meta_build_location>
        </image>

        <image sign_id="prog_firehose" name="prog_firehose.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000003</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
        </image>

        <image sign_id="tz" name="tz.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000007</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <oem_id_independent>enable</oem_id_independent>
                <qti_sign>true</qti_sign>
                <selected_encryptor>unified_encryption_2_0</selected_encryptor>
                <UIE_key>default</UIE_key>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:TZ_BINARY_MDM) <!-- fusion sdx55_mdm -->
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:TZ_BINARY) <!-- stand-alone sdx55 -->
            </meta_build_location>
        </image>

        <image sign_id="devcfg" name="devcfg.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000005</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:DEVCFG_BINARY_MDM) <!-- fusion sdx55_mdm -->
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:DEVCFG_BINARY) <!-- stand-alone sdx55 -->
            </meta_build_location>
        </image>

        <image sign_id="apps" name="apps.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x0000000E</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:APSS_BINARY_MDM) <!-- fusion sdx55_mdm -->
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:APSS_BINARY) <!-- stand-alone sdx55 -->
            </meta_build_location>
        </image>

        <image sign_id="aop" name="aop.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000021</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:AOP_BINARY_MDM) <!-- fusion sdx55_mdm -->
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:AOP_BINARY) <!-- stand-alone sdx55 -->
            </meta_build_location>
        </image>

        <image sign_id="modem" name="qdsp6sw.mbn" image_type="elf_has_ht" output_file_name="modem.mbn">
            <general_properties_overrides>
                <sw_id>0x00000002</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <pil_split>true</pil_split>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:MPSS_BINARY_MDM) <!-- fusion sdx55_mdm -->
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:MPSS_BINARY) <!-- stand-alone sdx55 -->
            </meta_build_location>
        </image>

        <image sign_id="efs_tar" name="fs_image.tar.gz.mbn" image_type="mbn_40b">
            <general_properties_overrides>
                <sw_id>0x0000001B</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
        </image>

        <!-- Stand-alone SDX55.LE variant only. -->
        <image sign_id="abl" name="abl.elf" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x0000001C</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:ABL_ELF, PRODUCT_NAME_PREFIX:SDX55.LE)
            </meta_build_location>
        </image>

        <!-- Stand-alone SDX55.LE variant only. -->
        <image sign_id="ipa_fw" name="ipa_fws.elf" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x0000001D</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <pil_split>true</pil_split>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:IPA_FWS_ELF, PRODUCT_NAME_PREFIX:SDX55.LE)
            </meta_build_location>
        </image>

        <!-- Stand-alone SDX55.LE variant only. -->
        <image sign_id="uefi" name="uefi.elf" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000009</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:UEFI_ELF, PRODUCT_NAME_PREFIX:SDX55.LE)
            </meta_build_location>
        </image>

        <image sign_id="xbl_sec" name="xbl_sec.mbn" image_type="elf_post_phdr_load_aligned">
            <general_properties_overrides>
                <sw_id>0x0000000B</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <oem_id_independent>enable</oem_id_independent>
                <qti_sign>true</qti_sign>
                <oem_sign>false</oem_sign>
            </general_properties_overrides>
        </image>

        <image sign_id="multi_image" name="multi_image.mbn" image_type="multi_image" output_file_name="multi_image.mbn">
            <general_properties_overrides>
                <sw_id>0x00000022</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <multi_image_segment_addr>0x148D7000</multi_image_segment_addr>
            </general_properties_overrides>
        </image>

        <image sign_id="multi_image_qti" name="multi_image_qti.mbn" image_type="multi_image" output_file_name="multi_image_qti.mbn">
            <general_properties_overrides>
                <qti_sign>true</qti_sign>
                <oem_sign>false</oem_sign>
                <oem_id_independent>enable</oem_id_independent>
                <sw_id>0x00000023</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <multi_image_segment_addr>0x8FFF8000 </multi_image_segment_addr>
            </general_properties_overrides>
        </image>

        <image sign_id="hyp" name="hyp.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000015</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
            $(FILE_TYPE:file_ref, ATTR:cmm_file_var, VAR:HYP_BINARY_MDM)
            $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:HYP_BINARY)
            </meta_build_location>
        </image>

        <image sign_id="cmnlib" name="cmnlib.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x0000001F</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <app_id>0x00000555</app_id>
                <oem_id_independent>enable</oem_id_independent>
                <qti_sign>true</qti_sign>
                <selected_encryptor>unified_encryption_2_0</selected_encryptor>
                <UIE_key>default</UIE_key>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:CMNLIB_BINARY)
            </meta_build_location>
            <pil_split>true</pil_split>
        </image>

        <image sign_id="cmnlib64" name="cmnlib64.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x0000001F</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <app_id>0x00000556</app_id>
                <oem_id_independent>enable</oem_id_independent>
                <qti_sign>true</qti_sign>
                <selected_encryptor>unified_encryption_2_0</selected_encryptor>
                <UIE_key>default</UIE_key>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:CMNLIB64_BINARY)
            </meta_build_location>
            <pil_split>true</pil_split>
        </image>

         <image sign_id="sampleapp32" name="smplap32.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x0000000C</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <app_id>0x00000111</app_id>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:file_ref)
            </meta_build_location>
            <pil_split>true</pil_split>
        </image>

        <image sign_id="sampleapp64" name="smplap64.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x0000000C</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <app_id>0x00000112</app_id>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:file_ref)
            </meta_build_location>
            <pil_split>true</pil_split>
        </image>

        <image sign_id="smpcpyap" name="smpcpyap.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x0000000C</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <app_id>0x00000111</app_id>
                <qti_sign>true</qti_sign>
            </general_properties_overrides>
            <pil_split>true</pil_split>
        </image>

        <image sign_id="mcfg_hw" name="mcfg_hw.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000002</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
        </image>

        <image sign_id="mcfg_sw" name="mcfg_sw.mbn" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000002</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
        </image>

        <image sign_id="vip" name="DigestsToSign.bin.mbn" image_type="mbn_40b">
            <general_properties_overrides>
                <sw_id>0x00000003</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
        </image>

        <image sign_id="secelf" name="sec.elf" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x0000002B</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:SECELF_BINARY)
            </meta_build_location>
        </image>

        <image sign_id="dbgp" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000200</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
            </general_properties_overrides>
            <meta_build_location>
                $(FILE_TYPE:download_file, ATTR:cmm_file_var, VAR:APDP_BINARY)
            </meta_build_location>
        </image>

        <image sign_id="dbgp_dbl" image_type="elf_has_ht">
            <general_properties_overrides>
                <sw_id>0x00000200</sw_id>
                <anti_rollback_version>0x00000000</anti_rollback_version>
                <oem_id_independent>enable</oem_id_independent>
                <qti_sign>true</qti_sign>
            </general_properties_overrides>
        </image>
    </images_list>
</tns:secimage>
